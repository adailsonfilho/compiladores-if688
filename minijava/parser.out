Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    WHITESPACE
    SYSTEM
    BLOCK_COMMENT
    LINE_COMMENT

Grammar

Rule 0     S' -> goal
Rule 1     goal -> mainclass classdeclaration_star
Rule 2     mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE
Rule 3     classdeclaration_star -> classdeclaration_star classdeclaration
Rule 4     classdeclaration_star -> empty
Rule 5     classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
Rule 6     extends_opt -> EXTENDS id
Rule 7     extends_opt -> empty
Rule 8     statement_star -> statement_star statement
Rule 9     statement_star -> empty
Rule 10    statement -> LBRACE statement_star RBRACE
Rule 11    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 12    statement -> WHILE LPAREN expression RPAREN statement
Rule 13    statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 14    statement -> id LET expression SEMICOLON
Rule 15    statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON
Rule 16    vardeclaration_star -> empty
Rule 17    vardeclaration_star -> vardeclaration_star vardeclaration
Rule 18    vardeclaration -> type id SEMICOLON
Rule 19    type -> INT LBRACKET RBRACKET
Rule 20    type -> BOOLEAN
Rule 21    type -> INT
Rule 22    type -> id
Rule 23    methoddeclaration_star -> methoddeclaration_star methoddeclaration
Rule 24    methoddeclaration_star -> empty
Rule 25    methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
Rule 26    methodbody -> vardeclaration_star statement_star
Rule 27    params_opt -> COMMA type id params_opt
Rule 28    params_opt -> empty
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression LESS_THAN expression
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression TIMES expression
Rule 34    expression -> expression LBRACKET expression RBRACKET
Rule 35    expression -> expression DOT LENGTH
Rule 36    expression -> expression DOT id LPAREN expression expression_opt RPAREN
Rule 37    expression_opt -> COMMA expression expression_opt
Rule 38    expression_opt -> empty
Rule 39    expression -> LIT_INT
Rule 40    expression -> TRUE
Rule 41    expression -> FALSE
Rule 42    expression -> id
Rule 43    expression -> THIS
Rule 44    expression -> NEW INT LBRACKET expression RBRACKET
Rule 45    expression -> NEW id LPAREN RPAREN
Rule 46    expression -> NOT expression
Rule 47    expression -> LPAREN expression RPAREN
Rule 48    id -> ID
Rule 49    empty -> <empty>

Terminals, with rules where they appear

AND                  : 29
BLOCK_COMMENT        : 
BOOLEAN              : 20
CLASS                : 2 5
COMMA                : 27 37
DOT                  : 35 36
ELSE                 : 11
EXTENDS              : 6
FALSE                : 41
ID                   : 48
IF                   : 11
INT                  : 19 21 44
LBRACE               : 2 2 5 10 25
LBRACKET             : 2 15 19 34 44
LENGTH               : 35
LESS_THAN            : 30
LET                  : 14 15
LINE_COMMENT         : 
LIT_INT              : 39
LPAREN               : 2 11 12 13 25 36 45 47
MAIN                 : 2
MINUS                : 32
NEW                  : 44 45
NOT                  : 46
PLUS                 : 31
PUBLIC               : 2 25
RBRACE               : 2 2 5 10 25
RBRACKET             : 2 15 19 34 44
RETURN               : 25
RPAREN               : 2 11 12 13 25 36 45 47
SEMICOLON            : 13 14 15 18 25
STATIC               : 2
STRING               : 2
SYSTEM               : 
SYSTEM_PRINTLN       : 13
THIS                 : 43
TIMES                : 33
TRUE                 : 40
VOID                 : 2
WHILE                : 12
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

classdeclaration     : 3
classdeclaration_star : 1 3
empty                : 4 7 9 16 24 28 38
expression           : 11 12 13 14 15 15 25 29 29 30 30 31 31 32 32 33 33 34 34 35 36 36 37 44 46 47
expression_opt       : 36 37
extends_opt          : 5
goal                 : 0
id                   : 2 2 5 6 14 15 18 22 25 25 27 36 42 45
mainclass            : 1
methodbody           : 25
methoddeclaration    : 23
methoddeclaration_star : 5 23
params_opt           : 25 27
statement            : 2 8 11 11 12
statement_star       : 8 10 26
type                 : 18 25 25 27
vardeclaration       : 17
vardeclaration_star  : 5 17 26

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . mainclass classdeclaration_star
    (2) mainclass -> . CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    CLASS           shift and go to state 1

    mainclass                      shift and go to state 2
    goal                           shift and go to state 3

state 1

    (2) mainclass -> CLASS . id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 5

state 2

    (1) goal -> mainclass . classdeclaration_star
    (3) classdeclaration_star -> . classdeclaration_star classdeclaration
    (4) classdeclaration_star -> . empty
    (49) empty -> .

    CLASS           reduce using rule 49 (empty -> .)
    $end            reduce using rule 49 (empty -> .)

    classdeclaration_star          shift and go to state 6
    empty                          shift and go to state 7

state 3

    (0) S' -> goal .



state 4

    (48) id -> ID .

    LET             reduce using rule 48 (id -> ID .)
    LBRACKET        reduce using rule 48 (id -> ID .)
    LBRACE          reduce using rule 48 (id -> ID .)
    ID              reduce using rule 48 (id -> ID .)
    COMMA           reduce using rule 48 (id -> ID .)
    RPAREN          reduce using rule 48 (id -> ID .)
    LPAREN          reduce using rule 48 (id -> ID .)
    AND             reduce using rule 48 (id -> ID .)
    LESS_THAN       reduce using rule 48 (id -> ID .)
    PLUS            reduce using rule 48 (id -> ID .)
    MINUS           reduce using rule 48 (id -> ID .)
    TIMES           reduce using rule 48 (id -> ID .)
    DOT             reduce using rule 48 (id -> ID .)
    SEMICOLON       reduce using rule 48 (id -> ID .)
    RBRACKET        reduce using rule 48 (id -> ID .)
    EXTENDS         reduce using rule 48 (id -> ID .)


state 5

    (2) mainclass -> CLASS id . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 8


state 6

    (1) goal -> mainclass classdeclaration_star .
    (3) classdeclaration_star -> classdeclaration_star . classdeclaration
    (5) classdeclaration -> . CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE

    $end            reduce using rule 1 (goal -> mainclass classdeclaration_star .)
    CLASS           shift and go to state 10

    classdeclaration               shift and go to state 9

state 7

    (4) classdeclaration_star -> empty .

    CLASS           reduce using rule 4 (classdeclaration_star -> empty .)
    $end            reduce using rule 4 (classdeclaration_star -> empty .)


state 8

    (2) mainclass -> CLASS id LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    PUBLIC          shift and go to state 11


state 9

    (3) classdeclaration_star -> classdeclaration_star classdeclaration .

    CLASS           reduce using rule 3 (classdeclaration_star -> classdeclaration_star classdeclaration .)
    $end            reduce using rule 3 (classdeclaration_star -> classdeclaration_star classdeclaration .)


state 10

    (5) classdeclaration -> CLASS . id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 12

state 11

    (2) mainclass -> CLASS id LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    STATIC          shift and go to state 13


state 12

    (5) classdeclaration -> CLASS id . extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (6) extends_opt -> . EXTENDS id
    (7) extends_opt -> . empty
    (49) empty -> .

    EXTENDS         shift and go to state 14
    LBRACE          reduce using rule 49 (empty -> .)

    empty                          shift and go to state 16
    extends_opt                    shift and go to state 15

state 13

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    VOID            shift and go to state 17


state 14

    (6) extends_opt -> EXTENDS . id
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 18

state 15

    (5) classdeclaration -> CLASS id extends_opt . LBRACE vardeclaration_star methoddeclaration_star RBRACE

    LBRACE          shift and go to state 19


state 16

    (7) extends_opt -> empty .

    LBRACE          reduce using rule 7 (extends_opt -> empty .)


state 17

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    MAIN            shift and go to state 20


state 18

    (6) extends_opt -> EXTENDS id .

    LBRACE          reduce using rule 6 (extends_opt -> EXTENDS id .)


state 19

    (5) classdeclaration -> CLASS id extends_opt LBRACE . vardeclaration_star methoddeclaration_star RBRACE
    (16) vardeclaration_star -> . empty
    (17) vardeclaration_star -> . vardeclaration_star vardeclaration
    (49) empty -> .

    INT             reduce using rule 49 (empty -> .)
    BOOLEAN         reduce using rule 49 (empty -> .)
    ID              reduce using rule 49 (empty -> .)
    RBRACE          reduce using rule 49 (empty -> .)
    PUBLIC          reduce using rule 49 (empty -> .)

    vardeclaration_star            shift and go to state 21
    empty                          shift and go to state 22

state 20

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LPAREN          shift and go to state 23


state 21

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star . methoddeclaration_star RBRACE
    (17) vardeclaration_star -> vardeclaration_star . vardeclaration
    (23) methoddeclaration_star -> . methoddeclaration_star methoddeclaration
    (24) methoddeclaration_star -> . empty
    (18) vardeclaration -> . type id SEMICOLON
    (49) empty -> .
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (48) id -> . ID

    RBRACE          reduce using rule 49 (empty -> .)
    PUBLIC          reduce using rule 49 (empty -> .)
    INT             shift and go to state 27
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 4

    methoddeclaration_star         shift and go to state 25
    vardeclaration                 shift and go to state 26
    id                             shift and go to state 28
    type                           shift and go to state 29
    empty                          shift and go to state 30

state 22

    (16) vardeclaration_star -> empty .

    INT             reduce using rule 16 (vardeclaration_star -> empty .)
    BOOLEAN         reduce using rule 16 (vardeclaration_star -> empty .)
    ID              reduce using rule 16 (vardeclaration_star -> empty .)
    RBRACE          reduce using rule 16 (vardeclaration_star -> empty .)
    PUBLIC          reduce using rule 16 (vardeclaration_star -> empty .)
    LBRACE          reduce using rule 16 (vardeclaration_star -> empty .)
    IF              reduce using rule 16 (vardeclaration_star -> empty .)
    WHILE           reduce using rule 16 (vardeclaration_star -> empty .)
    SYSTEM_PRINTLN  reduce using rule 16 (vardeclaration_star -> empty .)
    RETURN          reduce using rule 16 (vardeclaration_star -> empty .)


state 23

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    STRING          shift and go to state 31


state 24

    (20) type -> BOOLEAN .

    ID              reduce using rule 20 (type -> BOOLEAN .)


state 25

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star . RBRACE
    (23) methoddeclaration_star -> methoddeclaration_star . methoddeclaration
    (25) methoddeclaration -> . PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE

    RBRACE          shift and go to state 34
    PUBLIC          shift and go to state 33

    methoddeclaration              shift and go to state 32

state 26

    (17) vardeclaration_star -> vardeclaration_star vardeclaration .

    INT             reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    BOOLEAN         reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    ID              reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    RBRACE          reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    PUBLIC          reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    LBRACE          reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    IF              reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    WHILE           reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    SYSTEM_PRINTLN  reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    RETURN          reduce using rule 17 (vardeclaration_star -> vardeclaration_star vardeclaration .)


state 27

    (19) type -> INT . LBRACKET RBRACKET
    (21) type -> INT .

    LBRACKET        shift and go to state 35
    ID              reduce using rule 21 (type -> INT .)


state 28

    (22) type -> id .

    ID              reduce using rule 22 (type -> id .)


state 29

    (18) vardeclaration -> type . id SEMICOLON
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 36

state 30

    (24) methoddeclaration_star -> empty .

    RBRACE          reduce using rule 24 (methoddeclaration_star -> empty .)
    PUBLIC          reduce using rule 24 (methoddeclaration_star -> empty .)


state 31

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LBRACKET        shift and go to state 37


state 32

    (23) methoddeclaration_star -> methoddeclaration_star methoddeclaration .

    RBRACE          reduce using rule 23 (methoddeclaration_star -> methoddeclaration_star methoddeclaration .)
    PUBLIC          reduce using rule 23 (methoddeclaration_star -> methoddeclaration_star methoddeclaration .)


state 33

    (25) methoddeclaration -> PUBLIC . type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (48) id -> . ID

    INT             shift and go to state 27
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 4

    type                           shift and go to state 38
    id                             shift and go to state 28

state 34

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .

    CLASS           reduce using rule 5 (classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)
    $end            reduce using rule 5 (classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)


state 35

    (19) type -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 39


state 36

    (18) vardeclaration -> type id . SEMICOLON

    SEMICOLON       shift and go to state 40


state 37

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    RBRACKET        shift and go to state 41


state 38

    (25) methoddeclaration -> PUBLIC type . id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 42

state 39

    (19) type -> INT LBRACKET RBRACKET .

    ID              reduce using rule 19 (type -> INT LBRACKET RBRACKET .)


state 40

    (18) vardeclaration -> type id SEMICOLON .

    INT             reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    BOOLEAN         reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    ID              reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    RBRACE          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    PUBLIC          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    LBRACE          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    IF              reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    WHILE           reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    RETURN          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)


state 41

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . id RPAREN LBRACE statement RBRACE RBRACE
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 43

state 42

    (25) methoddeclaration -> PUBLIC type id . LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE

    LPAREN          shift and go to state 44


state 43

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id . RPAREN LBRACE statement RBRACE RBRACE

    RPAREN          shift and go to state 45


state 44

    (25) methoddeclaration -> PUBLIC type id LPAREN . type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (48) id -> . ID

    INT             shift and go to state 27
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 4

    type                           shift and go to state 46
    id                             shift and go to state 28

state 45

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN . LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 47


state 46

    (25) methoddeclaration -> PUBLIC type id LPAREN type . id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 48

state 47

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE . statement RBRACE RBRACE
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 51
    id                             shift and go to state 50

state 48

    (25) methoddeclaration -> PUBLIC type id LPAREN type id . params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE
    (27) params_opt -> . COMMA type id params_opt
    (28) params_opt -> . empty
    (49) empty -> .

    COMMA           shift and go to state 55
    RPAREN          reduce using rule 49 (empty -> .)

    params_opt                     shift and go to state 56
    empty                          shift and go to state 57

state 49

    (11) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 58


state 50

    (14) statement -> id . LET expression SEMICOLON
    (15) statement -> id . LBRACKET expression RBRACKET LET expression SEMICOLON

    LET             shift and go to state 59
    LBRACKET        shift and go to state 60


state 51

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement . RBRACE RBRACE

    RBRACE          shift and go to state 61


state 52

    (13) statement -> SYSTEM_PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 62


state 53

    (10) statement -> LBRACE . statement_star RBRACE
    (8) statement_star -> . statement_star statement
    (9) statement_star -> . empty
    (49) empty -> .

    RBRACE          reduce using rule 49 (empty -> .)
    LBRACE          reduce using rule 49 (empty -> .)
    IF              reduce using rule 49 (empty -> .)
    WHILE           reduce using rule 49 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 49 (empty -> .)
    ID              reduce using rule 49 (empty -> .)

    statement_star                 shift and go to state 64
    empty                          shift and go to state 63

state 54

    (12) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 65


state 55

    (27) params_opt -> COMMA . type id params_opt
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (48) id -> . ID

    INT             shift and go to state 27
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 4

    type                           shift and go to state 66
    id                             shift and go to state 28

state 56

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt . RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE

    RPAREN          shift and go to state 67


state 57

    (28) params_opt -> empty .

    RPAREN          reduce using rule 28 (params_opt -> empty .)


state 58

    (11) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 75
    id                             shift and go to state 70

state 59

    (14) statement -> id LET . expression SEMICOLON
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 77
    id                             shift and go to state 70

state 60

    (15) statement -> id LBRACKET . expression RBRACKET LET expression SEMICOLON
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 78
    id                             shift and go to state 70

state 61

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE . RBRACE

    RBRACE          shift and go to state 79


state 62

    (13) statement -> SYSTEM_PRINTLN LPAREN . expression RPAREN SEMICOLON
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 80
    id                             shift and go to state 70

state 63

    (9) statement_star -> empty .

    RBRACE          reduce using rule 9 (statement_star -> empty .)
    LBRACE          reduce using rule 9 (statement_star -> empty .)
    IF              reduce using rule 9 (statement_star -> empty .)
    WHILE           reduce using rule 9 (statement_star -> empty .)
    SYSTEM_PRINTLN  reduce using rule 9 (statement_star -> empty .)
    ID              reduce using rule 9 (statement_star -> empty .)
    RETURN          reduce using rule 9 (statement_star -> empty .)


state 64

    (10) statement -> LBRACE statement_star . RBRACE
    (8) statement_star -> statement_star . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    RBRACE          shift and go to state 81
    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 82
    id                             shift and go to state 50

state 65

    (12) statement -> WHILE LPAREN . expression RPAREN statement
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 83
    id                             shift and go to state 70

state 66

    (27) params_opt -> COMMA type . id params_opt
    (48) id -> . ID

    ID              shift and go to state 4

    id                             shift and go to state 84

state 67

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN . LBRACE methodbody RETURN expression SEMICOLON RBRACE

    LBRACE          shift and go to state 85


state 68

    (44) expression -> NEW . INT LBRACKET expression RBRACKET
    (45) expression -> NEW . id LPAREN RPAREN
    (48) id -> . ID

    INT             shift and go to state 86
    ID              shift and go to state 4

    id                             shift and go to state 87

state 69

    (39) expression -> LIT_INT .

    AND             reduce using rule 39 (expression -> LIT_INT .)
    LESS_THAN       reduce using rule 39 (expression -> LIT_INT .)
    PLUS            reduce using rule 39 (expression -> LIT_INT .)
    MINUS           reduce using rule 39 (expression -> LIT_INT .)
    TIMES           reduce using rule 39 (expression -> LIT_INT .)
    LBRACKET        reduce using rule 39 (expression -> LIT_INT .)
    DOT             reduce using rule 39 (expression -> LIT_INT .)
    COMMA           reduce using rule 39 (expression -> LIT_INT .)
    RPAREN          reduce using rule 39 (expression -> LIT_INT .)
    SEMICOLON       reduce using rule 39 (expression -> LIT_INT .)
    RBRACKET        reduce using rule 39 (expression -> LIT_INT .)


state 70

    (42) expression -> id .

    AND             reduce using rule 42 (expression -> id .)
    LESS_THAN       reduce using rule 42 (expression -> id .)
    PLUS            reduce using rule 42 (expression -> id .)
    MINUS           reduce using rule 42 (expression -> id .)
    TIMES           reduce using rule 42 (expression -> id .)
    LBRACKET        reduce using rule 42 (expression -> id .)
    DOT             reduce using rule 42 (expression -> id .)
    COMMA           reduce using rule 42 (expression -> id .)
    RPAREN          reduce using rule 42 (expression -> id .)
    SEMICOLON       reduce using rule 42 (expression -> id .)
    RBRACKET        reduce using rule 42 (expression -> id .)


state 71

    (43) expression -> THIS .

    AND             reduce using rule 43 (expression -> THIS .)
    LESS_THAN       reduce using rule 43 (expression -> THIS .)
    PLUS            reduce using rule 43 (expression -> THIS .)
    MINUS           reduce using rule 43 (expression -> THIS .)
    TIMES           reduce using rule 43 (expression -> THIS .)
    LBRACKET        reduce using rule 43 (expression -> THIS .)
    DOT             reduce using rule 43 (expression -> THIS .)
    COMMA           reduce using rule 43 (expression -> THIS .)
    RPAREN          reduce using rule 43 (expression -> THIS .)
    SEMICOLON       reduce using rule 43 (expression -> THIS .)
    RBRACKET        reduce using rule 43 (expression -> THIS .)


state 72

    (40) expression -> TRUE .

    AND             reduce using rule 40 (expression -> TRUE .)
    LESS_THAN       reduce using rule 40 (expression -> TRUE .)
    PLUS            reduce using rule 40 (expression -> TRUE .)
    MINUS           reduce using rule 40 (expression -> TRUE .)
    TIMES           reduce using rule 40 (expression -> TRUE .)
    LBRACKET        reduce using rule 40 (expression -> TRUE .)
    DOT             reduce using rule 40 (expression -> TRUE .)
    COMMA           reduce using rule 40 (expression -> TRUE .)
    RPAREN          reduce using rule 40 (expression -> TRUE .)
    SEMICOLON       reduce using rule 40 (expression -> TRUE .)
    RBRACKET        reduce using rule 40 (expression -> TRUE .)


state 73

    (47) expression -> LPAREN . expression RPAREN
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 88
    id                             shift and go to state 70

state 74

    (41) expression -> FALSE .

    AND             reduce using rule 41 (expression -> FALSE .)
    LESS_THAN       reduce using rule 41 (expression -> FALSE .)
    PLUS            reduce using rule 41 (expression -> FALSE .)
    MINUS           reduce using rule 41 (expression -> FALSE .)
    TIMES           reduce using rule 41 (expression -> FALSE .)
    LBRACKET        reduce using rule 41 (expression -> FALSE .)
    DOT             reduce using rule 41 (expression -> FALSE .)
    COMMA           reduce using rule 41 (expression -> FALSE .)
    RPAREN          reduce using rule 41 (expression -> FALSE .)
    SEMICOLON       reduce using rule 41 (expression -> FALSE .)
    RBRACKET        reduce using rule 41 (expression -> FALSE .)


state 75

    (11) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 90
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 76

    (46) expression -> NOT . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 97
    id                             shift and go to state 70

state 77

    (14) statement -> id LET expression . SEMICOLON
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 98
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 78

    (15) statement -> id LBRACKET expression . RBRACKET LET expression SEMICOLON
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 99
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 79

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .

    CLASS           reduce using rule 2 (mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .)
    $end            reduce using rule 2 (mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .)


state 80

    (13) statement -> SYSTEM_PRINTLN LPAREN expression . RPAREN SEMICOLON
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 100
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 81

    (10) statement -> LBRACE statement_star RBRACE .

    RBRACE          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    LBRACE          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    IF              reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    WHILE           reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    SYSTEM_PRINTLN  reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    ID              reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    ELSE            reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    RETURN          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)


state 82

    (8) statement_star -> statement_star statement .

    RBRACE          reduce using rule 8 (statement_star -> statement_star statement .)
    LBRACE          reduce using rule 8 (statement_star -> statement_star statement .)
    IF              reduce using rule 8 (statement_star -> statement_star statement .)
    WHILE           reduce using rule 8 (statement_star -> statement_star statement .)
    SYSTEM_PRINTLN  reduce using rule 8 (statement_star -> statement_star statement .)
    ID              reduce using rule 8 (statement_star -> statement_star statement .)
    RETURN          reduce using rule 8 (statement_star -> statement_star statement .)


state 83

    (12) statement -> WHILE LPAREN expression . RPAREN statement
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 101
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 84

    (27) params_opt -> COMMA type id . params_opt
    (27) params_opt -> . COMMA type id params_opt
    (28) params_opt -> . empty
    (49) empty -> .

    COMMA           shift and go to state 55
    RPAREN          reduce using rule 49 (empty -> .)

    empty                          shift and go to state 57
    params_opt                     shift and go to state 102

state 85

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE . methodbody RETURN expression SEMICOLON RBRACE
    (26) methodbody -> . vardeclaration_star statement_star
    (16) vardeclaration_star -> . empty
    (17) vardeclaration_star -> . vardeclaration_star vardeclaration
    (49) empty -> .

    INT             reduce using rule 49 (empty -> .)
    BOOLEAN         reduce using rule 49 (empty -> .)
    ID              reduce using rule 49 (empty -> .)
    LBRACE          reduce using rule 49 (empty -> .)
    IF              reduce using rule 49 (empty -> .)
    WHILE           reduce using rule 49 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 49 (empty -> .)
    RETURN          reduce using rule 49 (empty -> .)

    methodbody                     shift and go to state 103
    vardeclaration_star            shift and go to state 104
    empty                          shift and go to state 22

state 86

    (44) expression -> NEW INT . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 105


state 87

    (45) expression -> NEW id . LPAREN RPAREN

    LPAREN          shift and go to state 106


state 88

    (47) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 107
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 89

    (29) expression -> expression AND . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 108
    id                             shift and go to state 70

state 90

    (11) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 109
    id                             shift and go to state 50

state 91

    (32) expression -> expression MINUS . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 110
    id                             shift and go to state 70

state 92

    (30) expression -> expression LESS_THAN . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 111
    id                             shift and go to state 70

state 93

    (31) expression -> expression PLUS . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 112
    id                             shift and go to state 70

state 94

    (35) expression -> expression DOT . LENGTH
    (36) expression -> expression DOT . id LPAREN expression expression_opt RPAREN
    (48) id -> . ID

    LENGTH          shift and go to state 114
    ID              shift and go to state 4

    id                             shift and go to state 113

state 95

    (33) expression -> expression TIMES . expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 115
    id                             shift and go to state 70

state 96

    (34) expression -> expression LBRACKET . expression RBRACKET
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 116
    id                             shift and go to state 70

state 97

    (46) expression -> NOT expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COMMA           reduce using rule 46 (expression -> NOT expression .)
    RPAREN          reduce using rule 46 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 46 (expression -> NOT expression .)
    RBRACKET        reduce using rule 46 (expression -> NOT expression .)
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94

  ! AND             [ reduce using rule 46 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 46 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> NOT expression .) ]


state 98

    (14) statement -> id LET expression SEMICOLON .

    RBRACE          reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    LBRACE          reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    RETURN          reduce using rule 14 (statement -> id LET expression SEMICOLON .)


state 99

    (15) statement -> id LBRACKET expression RBRACKET . LET expression SEMICOLON

    LET             shift and go to state 117


state 100

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 118


state 101

    (12) statement -> WHILE LPAREN expression RPAREN . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 119
    id                             shift and go to state 50

state 102

    (27) params_opt -> COMMA type id params_opt .

    RPAREN          reduce using rule 27 (params_opt -> COMMA type id params_opt .)


state 103

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody . RETURN expression SEMICOLON RBRACE

    RETURN          shift and go to state 120


state 104

    (26) methodbody -> vardeclaration_star . statement_star
    (17) vardeclaration_star -> vardeclaration_star . vardeclaration
    (8) statement_star -> . statement_star statement
    (9) statement_star -> . empty
    (18) vardeclaration -> . type id SEMICOLON
    (49) empty -> .
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (48) id -> . ID

  ! shift/reduce conflict for ID resolved as shift
    LBRACE          reduce using rule 49 (empty -> .)
    IF              reduce using rule 49 (empty -> .)
    WHILE           reduce using rule 49 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 49 (empty -> .)
    RETURN          reduce using rule 49 (empty -> .)
    INT             shift and go to state 27
    BOOLEAN         shift and go to state 24
    ID              shift and go to state 4

  ! ID              [ reduce using rule 49 (empty -> .) ]

    vardeclaration                 shift and go to state 26
    id                             shift and go to state 28
    type                           shift and go to state 29
    statement_star                 shift and go to state 121
    empty                          shift and go to state 63

state 105

    (44) expression -> NEW INT LBRACKET . expression RBRACKET
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 122
    id                             shift and go to state 70

state 106

    (45) expression -> NEW id LPAREN . RPAREN

    RPAREN          shift and go to state 123


state 107

    (47) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 47 (expression -> LPAREN expression RPAREN .)


state 108

    (29) expression -> expression AND expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 29 (expression -> expression AND expression .)
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94

  ! AND             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> expression AND expression .) ]


state 109

    (11) statement -> IF LPAREN expression RPAREN statement . ELSE statement

    ELSE            shift and go to state 124


state 110

    (32) expression -> expression MINUS expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    AND             reduce using rule 32 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 32 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 32 (expression -> expression MINUS expression .)
    DOT             reduce using rule 32 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 32 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 32 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 95

  ! TIMES           [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! PLUS            [ shift and go to state 93 ]
  ! MINUS           [ shift and go to state 91 ]
  ! LBRACKET        [ shift and go to state 96 ]
  ! DOT             [ shift and go to state 94 ]


state 111

    (30) expression -> expression LESS_THAN expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COMMA           reduce using rule 30 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 30 (expression -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 30 (expression -> expression LESS_THAN expression .)
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94

  ! AND             [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! LBRACKET        [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression LESS_THAN expression .) ]


state 112

    (31) expression -> expression PLUS expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    AND             reduce using rule 31 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 31 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 31 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 31 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 31 (expression -> expression PLUS expression .)
    DOT             reduce using rule 31 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 31 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 95

  ! TIMES           [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! PLUS            [ shift and go to state 93 ]
  ! MINUS           [ shift and go to state 91 ]
  ! LBRACKET        [ shift and go to state 96 ]
  ! DOT             [ shift and go to state 94 ]


state 113

    (36) expression -> expression DOT id . LPAREN expression expression_opt RPAREN

    LPAREN          shift and go to state 125


state 114

    (35) expression -> expression DOT LENGTH .

    AND             reduce using rule 35 (expression -> expression DOT LENGTH .)
    LESS_THAN       reduce using rule 35 (expression -> expression DOT LENGTH .)
    PLUS            reduce using rule 35 (expression -> expression DOT LENGTH .)
    MINUS           reduce using rule 35 (expression -> expression DOT LENGTH .)
    TIMES           reduce using rule 35 (expression -> expression DOT LENGTH .)
    LBRACKET        reduce using rule 35 (expression -> expression DOT LENGTH .)
    DOT             reduce using rule 35 (expression -> expression DOT LENGTH .)
    COMMA           reduce using rule 35 (expression -> expression DOT LENGTH .)
    RPAREN          reduce using rule 35 (expression -> expression DOT LENGTH .)
    SEMICOLON       reduce using rule 35 (expression -> expression DOT LENGTH .)
    RBRACKET        reduce using rule 35 (expression -> expression DOT LENGTH .)


state 115

    (33) expression -> expression TIMES expression .
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    AND             reduce using rule 33 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 33 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 33 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 33 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 33 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 33 (expression -> expression TIMES expression .)
    DOT             reduce using rule 33 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 33 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 33 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 33 (expression -> expression TIMES expression .)

  ! AND             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! PLUS            [ shift and go to state 93 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 95 ]
  ! LBRACKET        [ shift and go to state 96 ]
  ! DOT             [ shift and go to state 94 ]


state 116

    (34) expression -> expression LBRACKET expression . RBRACKET
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 126
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 117

    (15) statement -> id LBRACKET expression RBRACKET LET . expression SEMICOLON
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 127
    id                             shift and go to state 70

state 118

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)


state 119

    (12) statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    SYSTEM_PRINTLN  reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)


state 120

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN . expression SEMICOLON RBRACE
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 128
    id                             shift and go to state 70

state 121

    (26) methodbody -> vardeclaration_star statement_star .
    (8) statement_star -> statement_star . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    RETURN          reduce using rule 26 (methodbody -> vardeclaration_star statement_star .)
    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 82
    id                             shift and go to state 50

state 122

    (44) expression -> NEW INT LBRACKET expression . RBRACKET
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 129
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 123

    (45) expression -> NEW id LPAREN RPAREN .

    AND             reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    LESS_THAN       reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    PLUS            reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    MINUS           reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    TIMES           reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    LBRACKET        reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    DOT             reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    COMMA           reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    RPAREN          reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    SEMICOLON       reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)
    RBRACKET        reduce using rule 45 (expression -> NEW id LPAREN RPAREN .)


state 124

    (11) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) id -> . ID

    LBRACE          shift and go to state 53
    IF              shift and go to state 49
    WHILE           shift and go to state 54
    SYSTEM_PRINTLN  shift and go to state 52
    ID              shift and go to state 4

    statement                      shift and go to state 130
    id                             shift and go to state 50

state 125

    (36) expression -> expression DOT id LPAREN . expression expression_opt RPAREN
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 131
    id                             shift and go to state 70

state 126

    (34) expression -> expression LBRACKET expression RBRACKET .

    AND             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 34 (expression -> expression LBRACKET expression RBRACKET .)


state 127

    (15) statement -> id LBRACKET expression RBRACKET LET expression . SEMICOLON
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 132
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 128

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression . SEMICOLON RBRACE
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 133
    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94


state 129

    (44) expression -> NEW INT LBRACKET expression RBRACKET .

    AND             reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    DOT             reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 44 (expression -> NEW INT LBRACKET expression RBRACKET .)


state 130

    (11) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SYSTEM_PRINTLN  reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 131

    (36) expression -> expression DOT id LPAREN expression . expression_opt RPAREN
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN
    (37) expression_opt -> . COMMA expression expression_opt
    (38) expression_opt -> . empty
    (49) empty -> .

    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94
    COMMA           shift and go to state 135
    RPAREN          reduce using rule 49 (empty -> .)

    empty                          shift and go to state 134
    expression_opt                 shift and go to state 136

state 132

    (15) statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .

    RBRACE          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    LBRACE          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    IF              reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ID              reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)


state 133

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON . RBRACE

    RBRACE          shift and go to state 137


state 134

    (38) expression_opt -> empty .

    RPAREN          reduce using rule 38 (expression_opt -> empty .)


state 135

    (37) expression_opt -> COMMA . expression expression_opt
    (29) expression -> . expression AND expression
    (30) expression -> . expression LESS_THAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression TIMES expression
    (34) expression -> . expression LBRACKET expression RBRACKET
    (35) expression -> . expression DOT LENGTH
    (36) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (39) expression -> . LIT_INT
    (40) expression -> . TRUE
    (41) expression -> . FALSE
    (42) expression -> . id
    (43) expression -> . THIS
    (44) expression -> . NEW INT LBRACKET expression RBRACKET
    (45) expression -> . NEW id LPAREN RPAREN
    (46) expression -> . NOT expression
    (47) expression -> . LPAREN expression RPAREN
    (48) id -> . ID

    LIT_INT         shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 74
    THIS            shift and go to state 71
    NEW             shift and go to state 68
    NOT             shift and go to state 76
    LPAREN          shift and go to state 73
    ID              shift and go to state 4

    expression                     shift and go to state 138
    id                             shift and go to state 70

state 136

    (36) expression -> expression DOT id LPAREN expression expression_opt . RPAREN

    RPAREN          shift and go to state 139


state 137

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE .

    RBRACE          reduce using rule 25 (methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE .)
    PUBLIC          reduce using rule 25 (methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE .)


state 138

    (37) expression_opt -> COMMA expression . expression_opt
    (29) expression -> expression . AND expression
    (30) expression -> expression . LESS_THAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . TIMES expression
    (34) expression -> expression . LBRACKET expression RBRACKET
    (35) expression -> expression . DOT LENGTH
    (36) expression -> expression . DOT id LPAREN expression expression_opt RPAREN
    (37) expression_opt -> . COMMA expression expression_opt
    (38) expression_opt -> . empty
    (49) empty -> .

    AND             shift and go to state 89
    LESS_THAN       shift and go to state 92
    PLUS            shift and go to state 93
    MINUS           shift and go to state 91
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 96
    DOT             shift and go to state 94
    COMMA           shift and go to state 135
    RPAREN          reduce using rule 49 (empty -> .)

    empty                          shift and go to state 134
    expression_opt                 shift and go to state 140

state 139

    (36) expression -> expression DOT id LPAREN expression expression_opt RPAREN .

    AND             reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    LESS_THAN       reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    PLUS            reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    MINUS           reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    TIMES           reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    LBRACKET        reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    DOT             reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    COMMA           reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    RPAREN          reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    RBRACKET        reduce using rule 36 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)


state 140

    (37) expression_opt -> COMMA expression expression_opt .

    RPAREN          reduce using rule 37 (expression_opt -> COMMA expression expression_opt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 97 resolved as shift
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for DOT in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 111 resolved as shift
WARNING: shift/reduce conflict for DOT in state 111 resolved as shift
