Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    WHITESPACE
    LINE_COMMENT
    BLOCK_COMMENT
    SYSTEM

Grammar

Rule 0     S' -> goal
Rule 1     goal -> mainclass classdeclaration_star
Rule 2     mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE
Rule 3     classdeclaration_star -> classdeclaration classdeclaration_star
Rule 4     classdeclaration_star -> empty
Rule 5     classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
Rule 6     extends_opt -> EXTENDS id
Rule 7     extends_opt -> empty
Rule 8     statement -> LBRACE statement_star RBRACE
Rule 9     statement_star -> statement statement_star
Rule 10    statement_star -> empty
Rule 11    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 12    statement -> WHILE LPAREN expression RPAREN statement
Rule 13    statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 14    statement -> id LET expression SEMICOLON
Rule 15    statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON
Rule 16    vardeclaration_star -> vardeclaration vardeclaration_star
Rule 17    vardeclaration_star -> empty
Rule 18    vardeclaration -> type id SEMICOLON
Rule 19    type -> INT LBRACKET RBRACKET
Rule 20    type -> BOOLEAN
Rule 21    type -> INT
Rule 22    type -> id
Rule 23    methoddeclaration_star -> methoddeclaration methoddeclaration_star
Rule 24    methoddeclaration_star -> empty
Rule 25    methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
Rule 26    params_opt -> COMMA type id params_opt
Rule 27    params_opt -> empty
Rule 28    expression -> expression AND expression
Rule 29    expression -> expression LESS_THAN expression
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression LBRACKET expression RBRACKET
Rule 34    expression -> expression DOT LENGTH
Rule 35    expression -> expression DOT id LPAREN expression expression_opt RPAREN
Rule 36    expression_opt -> COMMA expression expression_opt
Rule 37    expression_opt -> empty
Rule 38    expression -> LIT_INT
Rule 39    expression -> TRUE
Rule 40    expression -> FALSE
Rule 41    expression -> id
Rule 42    expression -> THIS
Rule 43    expression -> NEW INT LBRACKET expression RBRACKET
Rule 44    expression -> NEW id LPAREN RPAREN
Rule 45    expression -> NOT expression
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    id -> ID
Rule 48    empty -> <empty>

Terminals, with rules where they appear

AND                  : 28
BLOCK_COMMENT        : 
BOOLEAN              : 20
CLASS                : 2 5
COMMA                : 26 36
DOT                  : 34 35
ELSE                 : 11
EXTENDS              : 6
FALSE                : 40
ID                   : 47
IF                   : 11
INT                  : 19 21 43
LBRACE               : 2 2 5 8 25
LBRACKET             : 2 15 19 33 43
LENGTH               : 34
LESS_THAN            : 29
LET                  : 14 15
LINE_COMMENT         : 
LIT_INT              : 38
LPAREN               : 2 11 12 13 25 35 44 46
MAIN                 : 2
MINUS                : 31
NEW                  : 43 44
NOT                  : 45
PLUS                 : 30
PUBLIC               : 2 25
RBRACE               : 2 2 5 8 25
RBRACKET             : 2 15 19 33 43
RETURN               : 25
RPAREN               : 2 11 12 13 25 35 44 46
SEMICOLON            : 13 14 15 18 25
STATIC               : 2
STRING               : 2
SYSTEM               : 
SYSTEM_PRINTLN       : 13
THIS                 : 42
TIMES                : 32
TRUE                 : 39
VOID                 : 2
WHILE                : 12
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

classdeclaration     : 3
classdeclaration_star : 1 3
empty                : 4 7 10 17 24 27 37
expression           : 11 12 13 14 15 15 25 28 28 29 29 30 30 31 31 32 32 33 33 34 35 35 36 43 45 46
expression_opt       : 35 36
extends_opt          : 5
goal                 : 0
id                   : 2 2 5 6 14 15 18 22 25 25 26 35 41 44
mainclass            : 1
methoddeclaration    : 23
methoddeclaration_star : 5 23
params_opt           : 25 26
statement            : 2 9 11 11 12
statement_star       : 8 9 25
type                 : 18 25 25 26
vardeclaration       : 16
vardeclaration_star  : 5 16 25

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . mainclass classdeclaration_star
    (2) mainclass -> . CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    CLASS           shift and go to state 1

    mainclass                      shift and go to state 3
    goal                           shift and go to state 2

state 1

    (2) mainclass -> CLASS . id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 4

state 2

    (0) S' -> goal .



state 3

    (1) goal -> mainclass . classdeclaration_star
    (3) classdeclaration_star -> . classdeclaration classdeclaration_star
    (4) classdeclaration_star -> . empty
    (5) classdeclaration -> . CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (48) empty -> .

    CLASS           shift and go to state 8
    $end            reduce using rule 48 (empty -> .)

    classdeclaration               shift and go to state 7
    empty                          shift and go to state 6
    classdeclaration_star          shift and go to state 9

state 4

    (2) mainclass -> CLASS id . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 10


state 5

    (47) id -> ID .

    RPAREN          reduce using rule 47 (id -> ID .)
    COMMA           reduce using rule 47 (id -> ID .)
    AND             reduce using rule 47 (id -> ID .)
    LESS_THAN       reduce using rule 47 (id -> ID .)
    PLUS            reduce using rule 47 (id -> ID .)
    MINUS           reduce using rule 47 (id -> ID .)
    TIMES           reduce using rule 47 (id -> ID .)
    LBRACKET        reduce using rule 47 (id -> ID .)
    DOT             reduce using rule 47 (id -> ID .)
    SEMICOLON       reduce using rule 47 (id -> ID .)
    RBRACKET        reduce using rule 47 (id -> ID .)
    ID              reduce using rule 47 (id -> ID .)
    LET             reduce using rule 47 (id -> ID .)
    LPAREN          reduce using rule 47 (id -> ID .)
    LBRACE          reduce using rule 47 (id -> ID .)
    EXTENDS         reduce using rule 47 (id -> ID .)


state 6

    (4) classdeclaration_star -> empty .

    $end            reduce using rule 4 (classdeclaration_star -> empty .)


state 7

    (3) classdeclaration_star -> classdeclaration . classdeclaration_star
    (3) classdeclaration_star -> . classdeclaration classdeclaration_star
    (4) classdeclaration_star -> . empty
    (5) classdeclaration -> . CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (48) empty -> .

    CLASS           shift and go to state 8
    $end            reduce using rule 48 (empty -> .)

    classdeclaration               shift and go to state 7
    empty                          shift and go to state 6
    classdeclaration_star          shift and go to state 11

state 8

    (5) classdeclaration -> CLASS . id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 12

state 9

    (1) goal -> mainclass classdeclaration_star .

    $end            reduce using rule 1 (goal -> mainclass classdeclaration_star .)


state 10

    (2) mainclass -> CLASS id LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    PUBLIC          shift and go to state 13


state 11

    (3) classdeclaration_star -> classdeclaration classdeclaration_star .

    $end            reduce using rule 3 (classdeclaration_star -> classdeclaration classdeclaration_star .)


state 12

    (5) classdeclaration -> CLASS id . extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (6) extends_opt -> . EXTENDS id
    (7) extends_opt -> . empty
    (48) empty -> .

    EXTENDS         shift and go to state 15
    LBRACE          reduce using rule 48 (empty -> .)

    extends_opt                    shift and go to state 14
    empty                          shift and go to state 16

state 13

    (2) mainclass -> CLASS id LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    STATIC          shift and go to state 17


state 14

    (5) classdeclaration -> CLASS id extends_opt . LBRACE vardeclaration_star methoddeclaration_star RBRACE

    LBRACE          shift and go to state 18


state 15

    (6) extends_opt -> EXTENDS . id
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 19

state 16

    (7) extends_opt -> empty .

    LBRACE          reduce using rule 7 (extends_opt -> empty .)


state 17

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    VOID            shift and go to state 20


state 18

    (5) classdeclaration -> CLASS id extends_opt LBRACE . vardeclaration_star methoddeclaration_star RBRACE
    (16) vardeclaration_star -> . vardeclaration vardeclaration_star
    (17) vardeclaration_star -> . empty
    (18) vardeclaration -> . type id SEMICOLON
    (48) empty -> .
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

    PUBLIC          reduce using rule 48 (empty -> .)
    RBRACE          reduce using rule 48 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

    type                           shift and go to state 27
    empty                          shift and go to state 24
    id                             shift and go to state 21
    vardeclaration                 shift and go to state 22
    vardeclaration_star            shift and go to state 23

state 19

    (6) extends_opt -> EXTENDS id .

    LBRACE          reduce using rule 6 (extends_opt -> EXTENDS id .)


state 20

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    MAIN            shift and go to state 28


state 21

    (22) type -> id .

    ID              reduce using rule 22 (type -> id .)


state 22

    (16) vardeclaration_star -> vardeclaration . vardeclaration_star
    (16) vardeclaration_star -> . vardeclaration vardeclaration_star
    (17) vardeclaration_star -> . empty
    (18) vardeclaration -> . type id SEMICOLON
    (48) empty -> .
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

  ! shift/reduce conflict for ID resolved as shift
    PUBLIC          reduce using rule 48 (empty -> .)
    RBRACE          reduce using rule 48 (empty -> .)
    LBRACE          reduce using rule 48 (empty -> .)
    IF              reduce using rule 48 (empty -> .)
    WHILE           reduce using rule 48 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 48 (empty -> .)
    RETURN          reduce using rule 48 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

  ! ID              [ reduce using rule 48 (empty -> .) ]

    id                             shift and go to state 21
    type                           shift and go to state 27
    vardeclaration                 shift and go to state 22
    vardeclaration_star            shift and go to state 29
    empty                          shift and go to state 24

state 23

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star . methoddeclaration_star RBRACE
    (23) methoddeclaration_star -> . methoddeclaration methoddeclaration_star
    (24) methoddeclaration_star -> . empty
    (25) methoddeclaration -> . PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (48) empty -> .

    PUBLIC          shift and go to state 32
    RBRACE          reduce using rule 48 (empty -> .)

    methoddeclaration              shift and go to state 30
    methoddeclaration_star         shift and go to state 31
    empty                          shift and go to state 33

state 24

    (17) vardeclaration_star -> empty .

    PUBLIC          reduce using rule 17 (vardeclaration_star -> empty .)
    RBRACE          reduce using rule 17 (vardeclaration_star -> empty .)
    LBRACE          reduce using rule 17 (vardeclaration_star -> empty .)
    IF              reduce using rule 17 (vardeclaration_star -> empty .)
    WHILE           reduce using rule 17 (vardeclaration_star -> empty .)
    SYSTEM_PRINTLN  reduce using rule 17 (vardeclaration_star -> empty .)
    ID              reduce using rule 17 (vardeclaration_star -> empty .)
    RETURN          reduce using rule 17 (vardeclaration_star -> empty .)


state 25

    (20) type -> BOOLEAN .

    ID              reduce using rule 20 (type -> BOOLEAN .)


state 26

    (19) type -> INT . LBRACKET RBRACKET
    (21) type -> INT .

    LBRACKET        shift and go to state 34
    ID              reduce using rule 21 (type -> INT .)


state 27

    (18) vardeclaration -> type . id SEMICOLON
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 35

state 28

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LPAREN          shift and go to state 36


state 29

    (16) vardeclaration_star -> vardeclaration vardeclaration_star .

    PUBLIC          reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    RBRACE          reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    LBRACE          reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    IF              reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    WHILE           reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    SYSTEM_PRINTLN  reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    ID              reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)
    RETURN          reduce using rule 16 (vardeclaration_star -> vardeclaration vardeclaration_star .)


state 30

    (23) methoddeclaration_star -> methoddeclaration . methoddeclaration_star
    (23) methoddeclaration_star -> . methoddeclaration methoddeclaration_star
    (24) methoddeclaration_star -> . empty
    (25) methoddeclaration -> . PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (48) empty -> .

    PUBLIC          shift and go to state 32
    RBRACE          reduce using rule 48 (empty -> .)

    empty                          shift and go to state 33
    methoddeclaration_star         shift and go to state 37
    methoddeclaration              shift and go to state 30

state 31

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star . RBRACE

    RBRACE          shift and go to state 38


state 32

    (25) methoddeclaration -> PUBLIC . type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

    type                           shift and go to state 39
    id                             shift and go to state 21

state 33

    (24) methoddeclaration_star -> empty .

    RBRACE          reduce using rule 24 (methoddeclaration_star -> empty .)


state 34

    (19) type -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 40


state 35

    (18) vardeclaration -> type id . SEMICOLON

    SEMICOLON       shift and go to state 41


state 36

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    STRING          shift and go to state 42


state 37

    (23) methoddeclaration_star -> methoddeclaration methoddeclaration_star .

    RBRACE          reduce using rule 23 (methoddeclaration_star -> methoddeclaration methoddeclaration_star .)


state 38

    (5) classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .

    CLASS           reduce using rule 5 (classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)
    $end            reduce using rule 5 (classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)


state 39

    (25) methoddeclaration -> PUBLIC type . id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 43

state 40

    (19) type -> INT LBRACKET RBRACKET .

    ID              reduce using rule 19 (type -> INT LBRACKET RBRACKET .)


state 41

    (18) vardeclaration -> type id SEMICOLON .

    INT             reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    BOOLEAN         reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    ID              reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    PUBLIC          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    RBRACE          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    LBRACE          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    IF              reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    WHILE           reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 18 (vardeclaration -> type id SEMICOLON .)
    RETURN          reduce using rule 18 (vardeclaration -> type id SEMICOLON .)


state 42

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    LBRACKET        shift and go to state 44


state 43

    (25) methoddeclaration -> PUBLIC type id . LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    LPAREN          shift and go to state 45


state 44

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET id RPAREN LBRACE statement RBRACE RBRACE

    RBRACKET        shift and go to state 46


state 45

    (25) methoddeclaration -> PUBLIC type id LPAREN . type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

    type                           shift and go to state 47
    id                             shift and go to state 21

state 46

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . id RPAREN LBRACE statement RBRACE RBRACE
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 48

state 47

    (25) methoddeclaration -> PUBLIC type id LPAREN type . id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 49

state 48

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id . RPAREN LBRACE statement RBRACE RBRACE

    RPAREN          shift and go to state 50


state 49

    (25) methoddeclaration -> PUBLIC type id LPAREN type id . params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (26) params_opt -> . COMMA type id params_opt
    (27) params_opt -> . empty
    (48) empty -> .

    COMMA           shift and go to state 51
    RPAREN          reduce using rule 48 (empty -> .)

    empty                          shift and go to state 52
    params_opt                     shift and go to state 53

state 50

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN . LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 54


state 51

    (26) params_opt -> COMMA . type id params_opt
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

    id                             shift and go to state 21
    type                           shift and go to state 55

state 52

    (27) params_opt -> empty .

    RPAREN          reduce using rule 27 (params_opt -> empty .)


state 53

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt . RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    RPAREN          shift and go to state 56


state 54

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE . statement RBRACE RBRACE
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    ID              shift and go to state 5

    id                             shift and go to state 62
    statement                      shift and go to state 57

state 55

    (26) params_opt -> COMMA type . id params_opt
    (47) id -> . ID

    ID              shift and go to state 5

    id                             shift and go to state 63

state 56

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN . LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    LBRACE          shift and go to state 64


state 57

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement . RBRACE RBRACE

    RBRACE          shift and go to state 65


state 58

    (13) statement -> SYSTEM_PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 66


state 59

    (8) statement -> LBRACE . statement_star RBRACE
    (9) statement_star -> . statement statement_star
    (10) statement_star -> . empty
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) empty -> .
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    RBRACE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 5

    id                             shift and go to state 62
    statement                      shift and go to state 67
    statement_star                 shift and go to state 68
    empty                          shift and go to state 69

state 60

    (12) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 70


state 61

    (11) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 71


state 62

    (14) statement -> id . LET expression SEMICOLON
    (15) statement -> id . LBRACKET expression RBRACKET LET expression SEMICOLON

    LET             shift and go to state 72
    LBRACKET        shift and go to state 73


state 63

    (26) params_opt -> COMMA type id . params_opt
    (26) params_opt -> . COMMA type id params_opt
    (27) params_opt -> . empty
    (48) empty -> .

    COMMA           shift and go to state 51
    RPAREN          reduce using rule 48 (empty -> .)

    params_opt                     shift and go to state 74
    empty                          shift and go to state 52

state 64

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE . vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (16) vardeclaration_star -> . vardeclaration vardeclaration_star
    (17) vardeclaration_star -> . empty
    (18) vardeclaration -> . type id SEMICOLON
    (48) empty -> .
    (19) type -> . INT LBRACKET RBRACKET
    (20) type -> . BOOLEAN
    (21) type -> . INT
    (22) type -> . id
    (47) id -> . ID

  ! shift/reduce conflict for ID resolved as shift
    LBRACE          reduce using rule 48 (empty -> .)
    IF              reduce using rule 48 (empty -> .)
    WHILE           reduce using rule 48 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 48 (empty -> .)
    RETURN          reduce using rule 48 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 25
    ID              shift and go to state 5

  ! ID              [ reduce using rule 48 (empty -> .) ]

    type                           shift and go to state 27
    empty                          shift and go to state 24
    id                             shift and go to state 21
    vardeclaration                 shift and go to state 22
    vardeclaration_star            shift and go to state 75

state 65

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE . RBRACE

    RBRACE          shift and go to state 76


state 66

    (13) statement -> SYSTEM_PRINTLN LPAREN . expression RPAREN SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 80

state 67

    (9) statement_star -> statement . statement_star
    (9) statement_star -> . statement statement_star
    (10) statement_star -> . empty
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) empty -> .
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    RBRACE          reduce using rule 48 (empty -> .)
    RETURN          reduce using rule 48 (empty -> .)
    ID              shift and go to state 5

    id                             shift and go to state 62
    statement                      shift and go to state 67
    statement_star                 shift and go to state 86
    empty                          shift and go to state 69

state 68

    (8) statement -> LBRACE statement_star . RBRACE

    RBRACE          shift and go to state 87


state 69

    (10) statement_star -> empty .

    RBRACE          reduce using rule 10 (statement_star -> empty .)
    RETURN          reduce using rule 10 (statement_star -> empty .)


state 70

    (12) statement -> WHILE LPAREN . expression RPAREN statement
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    expression                     shift and go to state 88
    id                             shift and go to state 81

state 71

    (11) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    expression                     shift and go to state 89
    id                             shift and go to state 81

state 72

    (14) statement -> id LET . expression SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 90

state 73

    (15) statement -> id LBRACKET . expression RBRACKET LET expression SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 91

state 74

    (26) params_opt -> COMMA type id params_opt .

    RPAREN          reduce using rule 26 (params_opt -> COMMA type id params_opt .)


state 75

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star . statement_star RETURN expression SEMICOLON RBRACE
    (9) statement_star -> . statement statement_star
    (10) statement_star -> . empty
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (48) empty -> .
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    RETURN          reduce using rule 48 (empty -> .)
    ID              shift and go to state 5

    statement                      shift and go to state 67
    statement_star                 shift and go to state 92
    empty                          shift and go to state 69
    id                             shift and go to state 62

state 76

    (2) mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .

    CLASS           reduce using rule 2 (mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .)
    $end            reduce using rule 2 (mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE .)


state 77

    (39) expression -> TRUE .

    SEMICOLON       reduce using rule 39 (expression -> TRUE .)
    AND             reduce using rule 39 (expression -> TRUE .)
    LESS_THAN       reduce using rule 39 (expression -> TRUE .)
    PLUS            reduce using rule 39 (expression -> TRUE .)
    MINUS           reduce using rule 39 (expression -> TRUE .)
    TIMES           reduce using rule 39 (expression -> TRUE .)
    LBRACKET        reduce using rule 39 (expression -> TRUE .)
    DOT             reduce using rule 39 (expression -> TRUE .)
    RPAREN          reduce using rule 39 (expression -> TRUE .)
    RBRACKET        reduce using rule 39 (expression -> TRUE .)
    COMMA           reduce using rule 39 (expression -> TRUE .)


state 78

    (46) expression -> LPAREN . expression RPAREN
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 93

state 79

    (45) expression -> NOT . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 94

state 80

    (13) statement -> SYSTEM_PRINTLN LPAREN expression . RPAREN SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 100
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 81

    (41) expression -> id .

    SEMICOLON       reduce using rule 41 (expression -> id .)
    AND             reduce using rule 41 (expression -> id .)
    LESS_THAN       reduce using rule 41 (expression -> id .)
    PLUS            reduce using rule 41 (expression -> id .)
    MINUS           reduce using rule 41 (expression -> id .)
    TIMES           reduce using rule 41 (expression -> id .)
    LBRACKET        reduce using rule 41 (expression -> id .)
    DOT             reduce using rule 41 (expression -> id .)
    RPAREN          reduce using rule 41 (expression -> id .)
    RBRACKET        reduce using rule 41 (expression -> id .)
    COMMA           reduce using rule 41 (expression -> id .)


state 82

    (40) expression -> FALSE .

    SEMICOLON       reduce using rule 40 (expression -> FALSE .)
    AND             reduce using rule 40 (expression -> FALSE .)
    LESS_THAN       reduce using rule 40 (expression -> FALSE .)
    PLUS            reduce using rule 40 (expression -> FALSE .)
    MINUS           reduce using rule 40 (expression -> FALSE .)
    TIMES           reduce using rule 40 (expression -> FALSE .)
    LBRACKET        reduce using rule 40 (expression -> FALSE .)
    DOT             reduce using rule 40 (expression -> FALSE .)
    RPAREN          reduce using rule 40 (expression -> FALSE .)
    RBRACKET        reduce using rule 40 (expression -> FALSE .)
    COMMA           reduce using rule 40 (expression -> FALSE .)


state 83

    (42) expression -> THIS .

    SEMICOLON       reduce using rule 42 (expression -> THIS .)
    AND             reduce using rule 42 (expression -> THIS .)
    LESS_THAN       reduce using rule 42 (expression -> THIS .)
    PLUS            reduce using rule 42 (expression -> THIS .)
    MINUS           reduce using rule 42 (expression -> THIS .)
    TIMES           reduce using rule 42 (expression -> THIS .)
    LBRACKET        reduce using rule 42 (expression -> THIS .)
    DOT             reduce using rule 42 (expression -> THIS .)
    RPAREN          reduce using rule 42 (expression -> THIS .)
    RBRACKET        reduce using rule 42 (expression -> THIS .)
    COMMA           reduce using rule 42 (expression -> THIS .)


state 84

    (38) expression -> LIT_INT .

    SEMICOLON       reduce using rule 38 (expression -> LIT_INT .)
    AND             reduce using rule 38 (expression -> LIT_INT .)
    LESS_THAN       reduce using rule 38 (expression -> LIT_INT .)
    PLUS            reduce using rule 38 (expression -> LIT_INT .)
    MINUS           reduce using rule 38 (expression -> LIT_INT .)
    TIMES           reduce using rule 38 (expression -> LIT_INT .)
    LBRACKET        reduce using rule 38 (expression -> LIT_INT .)
    DOT             reduce using rule 38 (expression -> LIT_INT .)
    RPAREN          reduce using rule 38 (expression -> LIT_INT .)
    RBRACKET        reduce using rule 38 (expression -> LIT_INT .)
    COMMA           reduce using rule 38 (expression -> LIT_INT .)


state 85

    (43) expression -> NEW . INT LBRACKET expression RBRACKET
    (44) expression -> NEW . id LPAREN RPAREN
    (47) id -> . ID

    INT             shift and go to state 104
    ID              shift and go to state 5

    id                             shift and go to state 103

state 86

    (9) statement_star -> statement statement_star .

    RBRACE          reduce using rule 9 (statement_star -> statement statement_star .)
    RETURN          reduce using rule 9 (statement_star -> statement statement_star .)


state 87

    (8) statement -> LBRACE statement_star RBRACE .

    RBRACE          reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    LBRACE          reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    IF              reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    WHILE           reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    SYSTEM_PRINTLN  reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    ID              reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    RETURN          reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)
    ELSE            reduce using rule 8 (statement -> LBRACE statement_star RBRACE .)


state 88

    (12) statement -> WHILE LPAREN expression . RPAREN statement
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 105
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 89

    (11) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 106
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 90

    (14) statement -> id LET expression . SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 107
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 91

    (15) statement -> id LBRACKET expression . RBRACKET LET expression SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 108
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 92

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star . RETURN expression SEMICOLON RBRACE

    RETURN          shift and go to state 109


state 93

    (46) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RPAREN          shift and go to state 110
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 94

    (45) expression -> NOT expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 45 (expression -> NOT expression .)
    RPAREN          reduce using rule 45 (expression -> NOT expression .)
    RBRACKET        reduce using rule 45 (expression -> NOT expression .)
    COMMA           reduce using rule 45 (expression -> NOT expression .)
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101

  ! AND             [ reduce using rule 45 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 45 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> NOT expression .) ]


state 95

    (31) expression -> expression MINUS . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 111

state 96

    (32) expression -> expression TIMES . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 112

state 97

    (29) expression -> expression LESS_THAN . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 113

state 98

    (30) expression -> expression PLUS . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 114

state 99

    (33) expression -> expression LBRACKET . expression RBRACKET
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 115

state 100

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 101

    (34) expression -> expression DOT . LENGTH
    (35) expression -> expression DOT . id LPAREN expression expression_opt RPAREN
    (47) id -> . ID

    LENGTH          shift and go to state 117
    ID              shift and go to state 5

    id                             shift and go to state 118

state 102

    (28) expression -> expression AND . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 119

state 103

    (44) expression -> NEW id . LPAREN RPAREN

    LPAREN          shift and go to state 120


state 104

    (43) expression -> NEW INT . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 121


state 105

    (12) statement -> WHILE LPAREN expression RPAREN . statement
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    ID              shift and go to state 5

    statement                      shift and go to state 122
    id                             shift and go to state 62

state 106

    (11) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    ID              shift and go to state 5

    statement                      shift and go to state 123
    id                             shift and go to state 62

state 107

    (14) statement -> id LET expression SEMICOLON .

    RBRACE          reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    LBRACE          reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    RETURN          reduce using rule 14 (statement -> id LET expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> id LET expression SEMICOLON .)


state 108

    (15) statement -> id LBRACKET expression RBRACKET . LET expression SEMICOLON

    LET             shift and go to state 124


state 109

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN . expression SEMICOLON RBRACE
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    expression                     shift and go to state 125
    id                             shift and go to state 81

state 110

    (46) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 111

    (31) expression -> expression MINUS expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 31 (expression -> expression MINUS expression .)
    DOT             reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 96

  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 102 ]
  ! LESS_THAN       [ shift and go to state 97 ]
  ! PLUS            [ shift and go to state 98 ]
  ! MINUS           [ shift and go to state 95 ]
  ! LBRACKET        [ shift and go to state 99 ]
  ! DOT             [ shift and go to state 101 ]


state 112

    (32) expression -> expression TIMES expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    AND             reduce using rule 32 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 32 (expression -> expression TIMES expression .)
    DOT             reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)

  ! AND             [ shift and go to state 102 ]
  ! LESS_THAN       [ shift and go to state 97 ]
  ! PLUS            [ shift and go to state 98 ]
  ! MINUS           [ shift and go to state 95 ]
  ! TIMES           [ shift and go to state 96 ]
  ! LBRACKET        [ shift and go to state 99 ]
  ! DOT             [ shift and go to state 101 ]


state 113

    (29) expression -> expression LESS_THAN expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 29 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 29 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 29 (expression -> expression LESS_THAN expression .)
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101

  ! AND             [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! LBRACKET        [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> expression LESS_THAN expression .) ]


state 114

    (30) expression -> expression PLUS expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 30 (expression -> expression PLUS expression .)
    DOT             reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 96

  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 102 ]
  ! LESS_THAN       [ shift and go to state 97 ]
  ! PLUS            [ shift and go to state 98 ]
  ! MINUS           [ shift and go to state 95 ]
  ! LBRACKET        [ shift and go to state 99 ]
  ! DOT             [ shift and go to state 101 ]


state 115

    (33) expression -> expression LBRACKET expression . RBRACKET
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 126
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 116

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)


state 117

    (34) expression -> expression DOT LENGTH .

    SEMICOLON       reduce using rule 34 (expression -> expression DOT LENGTH .)
    AND             reduce using rule 34 (expression -> expression DOT LENGTH .)
    LESS_THAN       reduce using rule 34 (expression -> expression DOT LENGTH .)
    PLUS            reduce using rule 34 (expression -> expression DOT LENGTH .)
    MINUS           reduce using rule 34 (expression -> expression DOT LENGTH .)
    TIMES           reduce using rule 34 (expression -> expression DOT LENGTH .)
    LBRACKET        reduce using rule 34 (expression -> expression DOT LENGTH .)
    DOT             reduce using rule 34 (expression -> expression DOT LENGTH .)
    RPAREN          reduce using rule 34 (expression -> expression DOT LENGTH .)
    RBRACKET        reduce using rule 34 (expression -> expression DOT LENGTH .)
    COMMA           reduce using rule 34 (expression -> expression DOT LENGTH .)


state 118

    (35) expression -> expression DOT id . LPAREN expression expression_opt RPAREN

    LPAREN          shift and go to state 127


state 119

    (28) expression -> expression AND expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression AND expression .)
    RPAREN          reduce using rule 28 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 28 (expression -> expression AND expression .)
    COMMA           reduce using rule 28 (expression -> expression AND expression .)
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101

  ! AND             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 28 (expression -> expression AND expression .) ]


state 120

    (44) expression -> NEW id LPAREN . RPAREN

    RPAREN          shift and go to state 128


state 121

    (43) expression -> NEW INT LBRACKET . expression RBRACKET
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 129

state 122

    (12) statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    SYSTEM_PRINTLN  reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)


state 123

    (11) statement -> IF LPAREN expression RPAREN statement . ELSE statement

    ELSE            shift and go to state 130


state 124

    (15) statement -> id LBRACKET expression RBRACKET LET . expression SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 131

state 125

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression . SEMICOLON RBRACE
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 132
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 126

    (33) expression -> expression LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 33 (expression -> expression LBRACKET expression RBRACKET .)


state 127

    (35) expression -> expression DOT id LPAREN . expression expression_opt RPAREN
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 133

state 128

    (44) expression -> NEW id LPAREN RPAREN .

    SEMICOLON       reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    AND             reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    LESS_THAN       reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    PLUS            reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    MINUS           reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    TIMES           reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    LBRACKET        reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    DOT             reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    RPAREN          reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    RBRACKET        reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)
    COMMA           reduce using rule 44 (expression -> NEW id LPAREN RPAREN .)


state 129

    (43) expression -> NEW INT LBRACKET expression . RBRACKET
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    RBRACKET        shift and go to state 134
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 130

    (11) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (8) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . id LET expression SEMICOLON
    (15) statement -> . id LBRACKET expression RBRACKET LET expression SEMICOLON
    (47) id -> . ID

    LBRACE          shift and go to state 59
    IF              shift and go to state 61
    WHILE           shift and go to state 60
    SYSTEM_PRINTLN  shift and go to state 58
    ID              shift and go to state 5

    statement                      shift and go to state 135
    id                             shift and go to state 62

state 131

    (15) statement -> id LBRACKET expression RBRACKET LET expression . SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN

    SEMICOLON       shift and go to state 136
    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101


state 132

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON . RBRACE

    RBRACE          shift and go to state 137


state 133

    (35) expression -> expression DOT id LPAREN expression . expression_opt RPAREN
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN
    (36) expression_opt -> . COMMA expression expression_opt
    (37) expression_opt -> . empty
    (48) empty -> .

    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101
    COMMA           shift and go to state 140
    RPAREN          reduce using rule 48 (empty -> .)

    expression_opt                 shift and go to state 139
    empty                          shift and go to state 138

state 134

    (43) expression -> NEW INT LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    AND             reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    DOT             reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 43 (expression -> NEW INT LBRACKET expression RBRACKET .)


state 135

    (11) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SYSTEM_PRINTLN  reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 136

    (15) statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .

    RBRACE          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    LBRACE          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    IF              reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ID              reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON .)


state 137

    (25) methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .

    PUBLIC          reduce using rule 25 (methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .)
    RBRACE          reduce using rule 25 (methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .)


state 138

    (37) expression_opt -> empty .

    RPAREN          reduce using rule 37 (expression_opt -> empty .)


state 139

    (35) expression -> expression DOT id LPAREN expression expression_opt . RPAREN

    RPAREN          shift and go to state 141


state 140

    (36) expression_opt -> COMMA . expression expression_opt
    (28) expression -> . expression AND expression
    (29) expression -> . expression LESS_THAN expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression LBRACKET expression RBRACKET
    (34) expression -> . expression DOT LENGTH
    (35) expression -> . expression DOT id LPAREN expression expression_opt RPAREN
    (38) expression -> . LIT_INT
    (39) expression -> . TRUE
    (40) expression -> . FALSE
    (41) expression -> . id
    (42) expression -> . THIS
    (43) expression -> . NEW INT LBRACKET expression RBRACKET
    (44) expression -> . NEW id LPAREN RPAREN
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) id -> . ID

    LIT_INT         shift and go to state 84
    TRUE            shift and go to state 77
    FALSE           shift and go to state 82
    THIS            shift and go to state 83
    NEW             shift and go to state 85
    NOT             shift and go to state 79
    LPAREN          shift and go to state 78
    ID              shift and go to state 5

    id                             shift and go to state 81
    expression                     shift and go to state 142

state 141

    (35) expression -> expression DOT id LPAREN expression expression_opt RPAREN .

    SEMICOLON       reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    AND             reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    LESS_THAN       reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    PLUS            reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    MINUS           reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    TIMES           reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    LBRACKET        reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    DOT             reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    RPAREN          reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    RBRACKET        reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)
    COMMA           reduce using rule 35 (expression -> expression DOT id LPAREN expression expression_opt RPAREN .)


state 142

    (36) expression_opt -> COMMA expression . expression_opt
    (28) expression -> expression . AND expression
    (29) expression -> expression . LESS_THAN expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . LBRACKET expression RBRACKET
    (34) expression -> expression . DOT LENGTH
    (35) expression -> expression . DOT id LPAREN expression expression_opt RPAREN
    (36) expression_opt -> . COMMA expression expression_opt
    (37) expression_opt -> . empty
    (48) empty -> .

    AND             shift and go to state 102
    LESS_THAN       shift and go to state 97
    PLUS            shift and go to state 98
    MINUS           shift and go to state 95
    TIMES           shift and go to state 96
    LBRACKET        shift and go to state 99
    DOT             shift and go to state 101
    COMMA           shift and go to state 140
    RPAREN          reduce using rule 48 (empty -> .)

    expression_opt                 shift and go to state 143
    empty                          shift and go to state 138

state 143

    (36) expression_opt -> COMMA expression expression_opt .

    RPAREN          reduce using rule 36 (expression_opt -> COMMA expression expression_opt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 94 resolved as shift
WARNING: shift/reduce conflict for DOT in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 113 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 113 resolved as shift
WARNING: shift/reduce conflict for DOT in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 119 resolved as shift
WARNING: shift/reduce conflict for DOT in state 119 resolved as shift
