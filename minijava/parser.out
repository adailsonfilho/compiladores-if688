Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    LINE_COMMENT
    WHITESPACE
    BLOCK_COMMENT

Grammar

Rule 0     S' -> goal
Rule 1     goal -> mainclass classdeclaration_star
Rule 2     mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE
Rule 3     classdeclaration_star -> classdeclaration_star classdeclaration
Rule 4     classdeclaration_star -> empty
Rule 5     classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
Rule 6     extends_opt -> EXTENDS ID
Rule 7     extends_opt -> empty
Rule 8     statement_star -> statement_star statement
Rule 9     statement_star -> empty
Rule 10    statement -> LBRACE statement_star RBRACE
Rule 11    statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 12    statement -> WHILE LPAREN expression RPAREN statement
Rule 13    statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 14    statement -> ID LET expression SEMICOLON
Rule 15    statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON
Rule 16    vardeclaration_star -> vardeclaration_star vardeclaration
Rule 17    vardeclaration_star -> empty
Rule 18    vardeclaration -> type ID SEMICOLON
Rule 19    type -> type_array
Rule 20    type_array -> INT LBRACKET RBRACKET
Rule 21    type -> BOOLEAN
Rule 22    type -> INT
Rule 23    type -> ID
Rule 24    methoddeclaration_star -> methoddeclaration_star methoddeclaration
Rule 25    methoddeclaration_star -> empty
Rule 26    methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
Rule 27    args_opt -> type ID
Rule 28    args_opt -> comma_args
Rule 29    comma_args -> comma_args COMMA type ID
Rule 30    comma_args -> empty
Rule 31    expression -> expression LESS_THAN expression
Rule 32    expression -> expression AND expression
Rule 33    expression -> expression PLUS expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression TIMES expression
Rule 36    expression -> expression LBRACKET expression RBRACKET
Rule 37    expression -> expression DOT LENGTH
Rule 38    expression -> expression DOT ID LPAREN expressions_opt RPAREN
Rule 39    expressions_opt -> expression expression_comma
Rule 40    expressions_opt -> empty
Rule 41    expression_comma -> expression_comma COMMA expression
Rule 42    expression_comma -> empty
Rule 43    expression -> LIT_INT
Rule 44    expression -> TRUE
Rule 45    expression -> FALSE
Rule 46    expression -> ID
Rule 47    expression -> THIS
Rule 48    expression -> NEW INT LBRACKET expression RBRACKET
Rule 49    expression -> NEW ID LPAREN RPAREN
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> NOT expression
Rule 52    empty -> <empty>

Terminals, with rules where they appear

AND                  : 32
BLOCK_COMMENT        : 
BOOLEAN              : 21
CLASS                : 2 5
COMMA                : 29 41
DOT                  : 37 38
ELSE                 : 11
EXTENDS              : 6
FALSE                : 45
ID                   : 2 2 5 6 14 15 18 23 26 27 29 38 46 49
IF                   : 11
INT                  : 20 22 48
LBRACE               : 2 2 5 10 26
LBRACKET             : 2 15 20 36 48
LENGTH               : 37
LESS_THAN            : 31
LET                  : 14 15
LINE_COMMENT         : 
LIT_INT              : 43
LPAREN               : 2 11 12 13 26 38 49 50
MAIN                 : 2
MINUS                : 34
NEW                  : 48 49
NOT                  : 51
PLUS                 : 33
PUBLIC               : 2 26
RBRACE               : 2 2 5 10 26
RBRACKET             : 2 15 20 36 48
RETURN               : 26
RPAREN               : 2 11 12 13 26 38 49 50
SEMICOLON            : 13 14 15 18 26
STATIC               : 2
STRING               : 2
SYSTEM_PRINTLN       : 13
THIS                 : 47
TIMES                : 35
TRUE                 : 44
VOID                 : 2
WHILE                : 12
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

args_opt             : 26
classdeclaration     : 3
classdeclaration_star : 1 3
comma_args           : 28 29
empty                : 4 7 9 17 25 30 40 42
expression           : 11 12 13 14 15 15 26 31 31 32 32 33 33 34 34 35 35 36 36 37 38 39 41 48 50 51
expression_comma     : 39 41
expressions_opt      : 38
extends_opt          : 5
goal                 : 0
mainclass            : 1
methoddeclaration    : 24
methoddeclaration_star : 5 24
statement            : 2 8 11 11 12
statement_star       : 8 10 26
type                 : 18 26 27 29
type_array           : 19
vardeclaration       : 16
vardeclaration_star  : 5 16 26

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . mainclass classdeclaration_star
    (2) mainclass -> . CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    CLASS           shift and go to state 1

    goal                           shift and go to state 3
    mainclass                      shift and go to state 2

state 1

    (2) mainclass -> CLASS . ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    ID              shift and go to state 4


state 2

    (1) goal -> mainclass . classdeclaration_star
    (3) classdeclaration_star -> . classdeclaration_star classdeclaration
    (4) classdeclaration_star -> . empty
    (52) empty -> .

    CLASS           reduce using rule 52 (empty -> .)
    $end            reduce using rule 52 (empty -> .)

    classdeclaration_star          shift and go to state 5
    empty                          shift and go to state 6

state 3

    (0) S' -> goal .



state 4

    (2) mainclass -> CLASS ID . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 7


state 5

    (1) goal -> mainclass classdeclaration_star .
    (3) classdeclaration_star -> classdeclaration_star . classdeclaration
    (5) classdeclaration -> . CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE

    $end            reduce using rule 1 (goal -> mainclass classdeclaration_star .)
    CLASS           shift and go to state 8

    classdeclaration               shift and go to state 9

state 6

    (4) classdeclaration_star -> empty .

    CLASS           reduce using rule 4 (classdeclaration_star -> empty .)
    $end            reduce using rule 4 (classdeclaration_star -> empty .)


state 7

    (2) mainclass -> CLASS ID LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    PUBLIC          shift and go to state 10


state 8

    (5) classdeclaration -> CLASS . ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE

    ID              shift and go to state 11


state 9

    (3) classdeclaration_star -> classdeclaration_star classdeclaration .

    CLASS           reduce using rule 3 (classdeclaration_star -> classdeclaration_star classdeclaration .)
    $end            reduce using rule 3 (classdeclaration_star -> classdeclaration_star classdeclaration .)


state 10

    (2) mainclass -> CLASS ID LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    STATIC          shift and go to state 12


state 11

    (5) classdeclaration -> CLASS ID . extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE
    (6) extends_opt -> . EXTENDS ID
    (7) extends_opt -> . empty
    (52) empty -> .

    EXTENDS         shift and go to state 13
    LBRACE          reduce using rule 52 (empty -> .)

    extends_opt                    shift and go to state 14
    empty                          shift and go to state 15

state 12

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    VOID            shift and go to state 16


state 13

    (6) extends_opt -> EXTENDS . ID

    ID              shift and go to state 17


state 14

    (5) classdeclaration -> CLASS ID extends_opt . LBRACE vardeclaration_star methoddeclaration_star RBRACE

    LBRACE          shift and go to state 18


state 15

    (7) extends_opt -> empty .

    LBRACE          reduce using rule 7 (extends_opt -> empty .)


state 16

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    MAIN            shift and go to state 19


state 17

    (6) extends_opt -> EXTENDS ID .

    LBRACE          reduce using rule 6 (extends_opt -> EXTENDS ID .)


state 18

    (5) classdeclaration -> CLASS ID extends_opt LBRACE . vardeclaration_star methoddeclaration_star RBRACE
    (16) vardeclaration_star -> . vardeclaration_star vardeclaration
    (17) vardeclaration_star -> . empty
    (52) empty -> .

    BOOLEAN         reduce using rule 52 (empty -> .)
    INT             reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    RBRACE          reduce using rule 52 (empty -> .)
    PUBLIC          reduce using rule 52 (empty -> .)

    empty                          shift and go to state 20
    vardeclaration_star            shift and go to state 21

state 19

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    LPAREN          shift and go to state 22


state 20

    (17) vardeclaration_star -> empty .

    BOOLEAN         reduce using rule 17 (vardeclaration_star -> empty .)
    INT             reduce using rule 17 (vardeclaration_star -> empty .)
    ID              reduce using rule 17 (vardeclaration_star -> empty .)
    RETURN          reduce using rule 17 (vardeclaration_star -> empty .)
    LBRACE          reduce using rule 17 (vardeclaration_star -> empty .)
    IF              reduce using rule 17 (vardeclaration_star -> empty .)
    WHILE           reduce using rule 17 (vardeclaration_star -> empty .)
    SYSTEM_PRINTLN  reduce using rule 17 (vardeclaration_star -> empty .)
    RBRACE          reduce using rule 17 (vardeclaration_star -> empty .)
    PUBLIC          reduce using rule 17 (vardeclaration_star -> empty .)


state 21

    (5) classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star . methoddeclaration_star RBRACE
    (16) vardeclaration_star -> vardeclaration_star . vardeclaration
    (24) methoddeclaration_star -> . methoddeclaration_star methoddeclaration
    (25) methoddeclaration_star -> . empty
    (18) vardeclaration -> . type ID SEMICOLON
    (52) empty -> .
    (19) type -> . type_array
    (21) type -> . BOOLEAN
    (22) type -> . INT
    (23) type -> . ID
    (20) type_array -> . INT LBRACKET RBRACKET

    RBRACE          reduce using rule 52 (empty -> .)
    PUBLIC          reduce using rule 52 (empty -> .)
    BOOLEAN         shift and go to state 25
    INT             shift and go to state 27
    ID              shift and go to state 30

    empty                          shift and go to state 26
    type                           shift and go to state 28
    type_array                     shift and go to state 23
    vardeclaration                 shift and go to state 24
    methoddeclaration_star         shift and go to state 29

state 22

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    STRING          shift and go to state 31


state 23

    (19) type -> type_array .

    ID              reduce using rule 19 (type -> type_array .)


state 24

    (16) vardeclaration_star -> vardeclaration_star vardeclaration .

    BOOLEAN         reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    INT             reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    ID              reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    RETURN          reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    LBRACE          reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    IF              reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    WHILE           reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    SYSTEM_PRINTLN  reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    RBRACE          reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)
    PUBLIC          reduce using rule 16 (vardeclaration_star -> vardeclaration_star vardeclaration .)


state 25

    (21) type -> BOOLEAN .

    ID              reduce using rule 21 (type -> BOOLEAN .)


state 26

    (25) methoddeclaration_star -> empty .

    RBRACE          reduce using rule 25 (methoddeclaration_star -> empty .)
    PUBLIC          reduce using rule 25 (methoddeclaration_star -> empty .)


state 27

    (22) type -> INT .
    (20) type_array -> INT . LBRACKET RBRACKET

    ID              reduce using rule 22 (type -> INT .)
    LBRACKET        shift and go to state 32


state 28

    (18) vardeclaration -> type . ID SEMICOLON

    ID              shift and go to state 33


state 29

    (5) classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star . RBRACE
    (24) methoddeclaration_star -> methoddeclaration_star . methoddeclaration
    (26) methoddeclaration -> . PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    RBRACE          shift and go to state 34
    PUBLIC          shift and go to state 36

    methoddeclaration              shift and go to state 35

state 30

    (23) type -> ID .

    ID              reduce using rule 23 (type -> ID .)


state 31

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    LBRACKET        shift and go to state 37


state 32

    (20) type_array -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 38


state 33

    (18) vardeclaration -> type ID . SEMICOLON

    SEMICOLON       shift and go to state 39


state 34

    (5) classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .

    CLASS           reduce using rule 5 (classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)
    $end            reduce using rule 5 (classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE .)


state 35

    (24) methoddeclaration_star -> methoddeclaration_star methoddeclaration .

    RBRACE          reduce using rule 24 (methoddeclaration_star -> methoddeclaration_star methoddeclaration .)
    PUBLIC          reduce using rule 24 (methoddeclaration_star -> methoddeclaration_star methoddeclaration .)


state 36

    (26) methoddeclaration -> PUBLIC . type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (19) type -> . type_array
    (21) type -> . BOOLEAN
    (22) type -> . INT
    (23) type -> . ID
    (20) type_array -> . INT LBRACKET RBRACKET

    BOOLEAN         shift and go to state 25
    INT             shift and go to state 27
    ID              shift and go to state 30

    type                           shift and go to state 40
    type_array                     shift and go to state 23

state 37

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE

    RBRACKET        shift and go to state 41


state 38

    (20) type_array -> INT LBRACKET RBRACKET .

    ID              reduce using rule 20 (type_array -> INT LBRACKET RBRACKET .)


state 39

    (18) vardeclaration -> type ID SEMICOLON .

    BOOLEAN         reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    INT             reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    ID              reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    RETURN          reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    LBRACE          reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    IF              reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    WHILE           reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    RBRACE          reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)
    PUBLIC          reduce using rule 18 (vardeclaration -> type ID SEMICOLON .)


state 40

    (26) methoddeclaration -> PUBLIC type . ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    ID              shift and go to state 42


state 41

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ID RPAREN LBRACE statement RBRACE RBRACE

    ID              shift and go to state 43


state 42

    (26) methoddeclaration -> PUBLIC type ID . LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    LPAREN          shift and go to state 44


state 43

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID . RPAREN LBRACE statement RBRACE RBRACE

    RPAREN          shift and go to state 45


state 44

    (26) methoddeclaration -> PUBLIC type ID LPAREN . args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (27) args_opt -> . type ID
    (28) args_opt -> . comma_args
    (19) type -> . type_array
    (21) type -> . BOOLEAN
    (22) type -> . INT
    (23) type -> . ID
    (29) comma_args -> . comma_args COMMA type ID
    (30) comma_args -> . empty
    (20) type_array -> . INT LBRACKET RBRACKET
    (52) empty -> .

    BOOLEAN         shift and go to state 25
    INT             shift and go to state 27
    ID              shift and go to state 30
    COMMA           reduce using rule 52 (empty -> .)
    RPAREN          reduce using rule 52 (empty -> .)

    empty                          shift and go to state 49
    type                           shift and go to state 47
    type_array                     shift and go to state 23
    comma_args                     shift and go to state 48
    args_opt                       shift and go to state 46

state 45

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN . LBRACE statement RBRACE RBRACE

    LBRACE          shift and go to state 50


state 46

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt . RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    RPAREN          shift and go to state 51


state 47

    (27) args_opt -> type . ID

    ID              shift and go to state 52


state 48

    (28) args_opt -> comma_args .
    (29) comma_args -> comma_args . COMMA type ID

    RPAREN          reduce using rule 28 (args_opt -> comma_args .)
    COMMA           shift and go to state 53


state 49

    (30) comma_args -> empty .

    COMMA           reduce using rule 30 (comma_args -> empty .)
    RPAREN          reduce using rule 30 (comma_args -> empty .)


state 50

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE . statement RBRACE RBRACE
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 59

state 51

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN . LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE

    LBRACE          shift and go to state 60


state 52

    (27) args_opt -> type ID .

    RPAREN          reduce using rule 27 (args_opt -> type ID .)


state 53

    (29) comma_args -> comma_args COMMA . type ID
    (19) type -> . type_array
    (21) type -> . BOOLEAN
    (22) type -> . INT
    (23) type -> . ID
    (20) type_array -> . INT LBRACKET RBRACKET

    BOOLEAN         shift and go to state 25
    INT             shift and go to state 27
    ID              shift and go to state 30

    type                           shift and go to state 61
    type_array                     shift and go to state 23

state 54

    (10) statement -> LBRACE . statement_star RBRACE
    (8) statement_star -> . statement_star statement
    (9) statement_star -> . empty
    (52) empty -> .

    RBRACE          reduce using rule 52 (empty -> .)
    LBRACE          reduce using rule 52 (empty -> .)
    IF              reduce using rule 52 (empty -> .)
    WHILE           reduce using rule 52 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)

    empty                          shift and go to state 62
    statement_star                 shift and go to state 63

state 55

    (12) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 64


state 56

    (13) statement -> SYSTEM_PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 57

    (14) statement -> ID . LET expression SEMICOLON
    (15) statement -> ID . LBRACKET expression RBRACKET LET expression SEMICOLON

    LET             shift and go to state 67
    LBRACKET        shift and go to state 66


state 58

    (11) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 68


state 59

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement . RBRACE RBRACE

    RBRACE          shift and go to state 69


state 60

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE . vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE
    (16) vardeclaration_star -> . vardeclaration_star vardeclaration
    (17) vardeclaration_star -> . empty
    (52) empty -> .

    BOOLEAN         reduce using rule 52 (empty -> .)
    INT             reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    RETURN          reduce using rule 52 (empty -> .)
    LBRACE          reduce using rule 52 (empty -> .)
    IF              reduce using rule 52 (empty -> .)
    WHILE           reduce using rule 52 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 52 (empty -> .)

    empty                          shift and go to state 20
    vardeclaration_star            shift and go to state 70

state 61

    (29) comma_args -> comma_args COMMA type . ID

    ID              shift and go to state 71


state 62

    (9) statement_star -> empty .

    RBRACE          reduce using rule 9 (statement_star -> empty .)
    LBRACE          reduce using rule 9 (statement_star -> empty .)
    IF              reduce using rule 9 (statement_star -> empty .)
    WHILE           reduce using rule 9 (statement_star -> empty .)
    SYSTEM_PRINTLN  reduce using rule 9 (statement_star -> empty .)
    ID              reduce using rule 9 (statement_star -> empty .)
    RETURN          reduce using rule 9 (statement_star -> empty .)


state 63

    (10) statement -> LBRACE statement_star . RBRACE
    (8) statement_star -> statement_star . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    RBRACE          shift and go to state 72
    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 73

state 64

    (12) statement -> WHILE LPAREN . expression RPAREN statement
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 80

state 65

    (13) statement -> SYSTEM_PRINTLN LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 83

state 66

    (15) statement -> ID LBRACKET . expression RBRACKET LET expression SEMICOLON
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 84

state 67

    (14) statement -> ID LET . expression SEMICOLON
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 85

state 68

    (11) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 86

state 69

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE . RBRACE

    RBRACE          shift and go to state 87


state 70

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star . statement_star RETURN expression SEMICOLON RBRACE
    (16) vardeclaration_star -> vardeclaration_star . vardeclaration
    (8) statement_star -> . statement_star statement
    (9) statement_star -> . empty
    (18) vardeclaration -> . type ID SEMICOLON
    (52) empty -> .
    (19) type -> . type_array
    (21) type -> . BOOLEAN
    (22) type -> . INT
    (23) type -> . ID
    (20) type_array -> . INT LBRACKET RBRACKET

  ! shift/reduce conflict for ID resolved as shift
    RETURN          reduce using rule 52 (empty -> .)
    LBRACE          reduce using rule 52 (empty -> .)
    IF              reduce using rule 52 (empty -> .)
    WHILE           reduce using rule 52 (empty -> .)
    SYSTEM_PRINTLN  reduce using rule 52 (empty -> .)
    BOOLEAN         shift and go to state 25
    INT             shift and go to state 27
    ID              shift and go to state 30

  ! ID              [ reduce using rule 52 (empty -> .) ]

    empty                          shift and go to state 62
    type                           shift and go to state 28
    type_array                     shift and go to state 23
    vardeclaration                 shift and go to state 24
    statement_star                 shift and go to state 88

state 71

    (29) comma_args -> comma_args COMMA type ID .

    COMMA           reduce using rule 29 (comma_args -> comma_args COMMA type ID .)
    RPAREN          reduce using rule 29 (comma_args -> comma_args COMMA type ID .)


state 72

    (10) statement -> LBRACE statement_star RBRACE .

    RBRACE          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    LBRACE          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    IF              reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    WHILE           reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    SYSTEM_PRINTLN  reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    ID              reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    RETURN          reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)
    ELSE            reduce using rule 10 (statement -> LBRACE statement_star RBRACE .)


state 73

    (8) statement_star -> statement_star statement .

    RBRACE          reduce using rule 8 (statement_star -> statement_star statement .)
    LBRACE          reduce using rule 8 (statement_star -> statement_star statement .)
    IF              reduce using rule 8 (statement_star -> statement_star statement .)
    WHILE           reduce using rule 8 (statement_star -> statement_star statement .)
    SYSTEM_PRINTLN  reduce using rule 8 (statement_star -> statement_star statement .)
    ID              reduce using rule 8 (statement_star -> statement_star statement .)
    RETURN          reduce using rule 8 (statement_star -> statement_star statement .)


state 74

    (45) expression -> FALSE .

    RBRACKET        reduce using rule 45 (expression -> FALSE .)
    LESS_THAN       reduce using rule 45 (expression -> FALSE .)
    AND             reduce using rule 45 (expression -> FALSE .)
    PLUS            reduce using rule 45 (expression -> FALSE .)
    MINUS           reduce using rule 45 (expression -> FALSE .)
    TIMES           reduce using rule 45 (expression -> FALSE .)
    LBRACKET        reduce using rule 45 (expression -> FALSE .)
    DOT             reduce using rule 45 (expression -> FALSE .)
    RPAREN          reduce using rule 45 (expression -> FALSE .)
    SEMICOLON       reduce using rule 45 (expression -> FALSE .)
    COMMA           reduce using rule 45 (expression -> FALSE .)


state 75

    (50) expression -> LPAREN . expression RPAREN
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 89

state 76

    (43) expression -> LIT_INT .

    RBRACKET        reduce using rule 43 (expression -> LIT_INT .)
    LESS_THAN       reduce using rule 43 (expression -> LIT_INT .)
    AND             reduce using rule 43 (expression -> LIT_INT .)
    PLUS            reduce using rule 43 (expression -> LIT_INT .)
    MINUS           reduce using rule 43 (expression -> LIT_INT .)
    TIMES           reduce using rule 43 (expression -> LIT_INT .)
    LBRACKET        reduce using rule 43 (expression -> LIT_INT .)
    DOT             reduce using rule 43 (expression -> LIT_INT .)
    RPAREN          reduce using rule 43 (expression -> LIT_INT .)
    SEMICOLON       reduce using rule 43 (expression -> LIT_INT .)
    COMMA           reduce using rule 43 (expression -> LIT_INT .)


state 77

    (48) expression -> NEW . INT LBRACKET expression RBRACKET
    (49) expression -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 90
    ID              shift and go to state 91


state 78

    (46) expression -> ID .

    RBRACKET        reduce using rule 46 (expression -> ID .)
    LESS_THAN       reduce using rule 46 (expression -> ID .)
    AND             reduce using rule 46 (expression -> ID .)
    PLUS            reduce using rule 46 (expression -> ID .)
    MINUS           reduce using rule 46 (expression -> ID .)
    TIMES           reduce using rule 46 (expression -> ID .)
    LBRACKET        reduce using rule 46 (expression -> ID .)
    DOT             reduce using rule 46 (expression -> ID .)
    RPAREN          reduce using rule 46 (expression -> ID .)
    SEMICOLON       reduce using rule 46 (expression -> ID .)
    COMMA           reduce using rule 46 (expression -> ID .)


state 79

    (44) expression -> TRUE .

    RBRACKET        reduce using rule 44 (expression -> TRUE .)
    LESS_THAN       reduce using rule 44 (expression -> TRUE .)
    AND             reduce using rule 44 (expression -> TRUE .)
    PLUS            reduce using rule 44 (expression -> TRUE .)
    MINUS           reduce using rule 44 (expression -> TRUE .)
    TIMES           reduce using rule 44 (expression -> TRUE .)
    LBRACKET        reduce using rule 44 (expression -> TRUE .)
    DOT             reduce using rule 44 (expression -> TRUE .)
    RPAREN          reduce using rule 44 (expression -> TRUE .)
    SEMICOLON       reduce using rule 44 (expression -> TRUE .)
    COMMA           reduce using rule 44 (expression -> TRUE .)


state 80

    (12) statement -> WHILE LPAREN expression . RPAREN statement
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RPAREN          shift and go to state 97
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 81

    (51) expression -> NOT . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 100

state 82

    (47) expression -> THIS .

    RBRACKET        reduce using rule 47 (expression -> THIS .)
    LESS_THAN       reduce using rule 47 (expression -> THIS .)
    AND             reduce using rule 47 (expression -> THIS .)
    PLUS            reduce using rule 47 (expression -> THIS .)
    MINUS           reduce using rule 47 (expression -> THIS .)
    TIMES           reduce using rule 47 (expression -> THIS .)
    LBRACKET        reduce using rule 47 (expression -> THIS .)
    DOT             reduce using rule 47 (expression -> THIS .)
    RPAREN          reduce using rule 47 (expression -> THIS .)
    SEMICOLON       reduce using rule 47 (expression -> THIS .)
    COMMA           reduce using rule 47 (expression -> THIS .)


state 83

    (13) statement -> SYSTEM_PRINTLN LPAREN expression . RPAREN SEMICOLON
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RPAREN          shift and go to state 101
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 84

    (15) statement -> ID LBRACKET expression . RBRACKET LET expression SEMICOLON
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        shift and go to state 102
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 85

    (14) statement -> ID LET expression . SEMICOLON
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    SEMICOLON       shift and go to state 103
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 86

    (11) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RPAREN          shift and go to state 104
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 87

    (2) mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE .

    CLASS           reduce using rule 2 (mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE .)
    $end            reduce using rule 2 (mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE .)


state 88

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star . RETURN expression SEMICOLON RBRACE
    (8) statement_star -> statement_star . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    RETURN          shift and go to state 105
    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 73

state 89

    (50) expression -> LPAREN expression . RPAREN
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RPAREN          shift and go to state 106
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 90

    (48) expression -> NEW INT . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 107


state 91

    (49) expression -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 108


state 92

    (31) expression -> expression LESS_THAN . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 109

state 93

    (36) expression -> expression LBRACKET . expression RBRACKET
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 110

state 94

    (32) expression -> expression AND . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 111

state 95

    (35) expression -> expression TIMES . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 112

state 96

    (37) expression -> expression DOT . LENGTH
    (38) expression -> expression DOT . ID LPAREN expressions_opt RPAREN

    LENGTH          shift and go to state 113
    ID              shift and go to state 114


state 97

    (12) statement -> WHILE LPAREN expression RPAREN . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 115

state 98

    (34) expression -> expression MINUS . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 116

state 99

    (33) expression -> expression PLUS . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 117

state 100

    (51) expression -> NOT expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 51 (expression -> NOT expression .)
    LESS_THAN       reduce using rule 51 (expression -> NOT expression .)
    AND             reduce using rule 51 (expression -> NOT expression .)
    PLUS            reduce using rule 51 (expression -> NOT expression .)
    MINUS           reduce using rule 51 (expression -> NOT expression .)
    LBRACKET        reduce using rule 51 (expression -> NOT expression .)
    DOT             reduce using rule 51 (expression -> NOT expression .)
    RPAREN          reduce using rule 51 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 51 (expression -> NOT expression .)
    COMMA           reduce using rule 51 (expression -> NOT expression .)
    TIMES           shift and go to state 95

  ! TIMES           [ reduce using rule 51 (expression -> NOT expression .) ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! AND             [ shift and go to state 94 ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 101

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 118


state 102

    (15) statement -> ID LBRACKET expression RBRACKET . LET expression SEMICOLON

    LET             shift and go to state 119


state 103

    (14) statement -> ID LET expression SEMICOLON .

    RBRACE          reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    LBRACE          reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    RETURN          reduce using rule 14 (statement -> ID LET expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> ID LET expression SEMICOLON .)


state 104

    (11) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 120

state 105

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN . expression SEMICOLON RBRACE
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 121

state 106

    (50) expression -> LPAREN expression RPAREN .

    RBRACKET        reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 107

    (48) expression -> NEW INT LBRACKET . expression RBRACKET
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 122

state 108

    (49) expression -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 123


state 109

    (31) expression -> expression LESS_THAN expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 31 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 31 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 31 (expression -> expression LESS_THAN expression .)
    PLUS            reduce using rule 31 (expression -> expression LESS_THAN expression .)
    MINUS           reduce using rule 31 (expression -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 31 (expression -> expression LESS_THAN expression .)
    DOT             reduce using rule 31 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 31 (expression -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 31 (expression -> expression LESS_THAN expression .)
    TIMES           shift and go to state 95

  ! TIMES           [ reduce using rule 31 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! AND             [ shift and go to state 94 ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 110

    (36) expression -> expression LBRACKET expression . RBRACKET
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        shift and go to state 124
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 111

    (32) expression -> expression AND expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 32 (expression -> expression AND expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression AND expression .)
    AND             reduce using rule 32 (expression -> expression AND expression .)
    PLUS            reduce using rule 32 (expression -> expression AND expression .)
    MINUS           reduce using rule 32 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 32 (expression -> expression AND expression .)
    DOT             reduce using rule 32 (expression -> expression AND expression .)
    RPAREN          reduce using rule 32 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression AND expression .)
    COMMA           reduce using rule 32 (expression -> expression AND expression .)
    TIMES           shift and go to state 95

  ! TIMES           [ reduce using rule 32 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ shift and go to state 92 ]
  ! AND             [ shift and go to state 94 ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 112

    (35) expression -> expression TIMES expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 35 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 35 (expression -> expression TIMES expression .)
    AND             reduce using rule 35 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 35 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 35 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 35 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 35 (expression -> expression TIMES expression .)
    DOT             reduce using rule 35 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 35 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 35 (expression -> expression TIMES expression .)

  ! LESS_THAN       [ shift and go to state 92 ]
  ! AND             [ shift and go to state 94 ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! TIMES           [ shift and go to state 95 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 113

    (37) expression -> expression DOT LENGTH .

    RBRACKET        reduce using rule 37 (expression -> expression DOT LENGTH .)
    LESS_THAN       reduce using rule 37 (expression -> expression DOT LENGTH .)
    AND             reduce using rule 37 (expression -> expression DOT LENGTH .)
    PLUS            reduce using rule 37 (expression -> expression DOT LENGTH .)
    MINUS           reduce using rule 37 (expression -> expression DOT LENGTH .)
    TIMES           reduce using rule 37 (expression -> expression DOT LENGTH .)
    LBRACKET        reduce using rule 37 (expression -> expression DOT LENGTH .)
    DOT             reduce using rule 37 (expression -> expression DOT LENGTH .)
    RPAREN          reduce using rule 37 (expression -> expression DOT LENGTH .)
    SEMICOLON       reduce using rule 37 (expression -> expression DOT LENGTH .)
    COMMA           reduce using rule 37 (expression -> expression DOT LENGTH .)


state 114

    (38) expression -> expression DOT ID . LPAREN expressions_opt RPAREN

    LPAREN          shift and go to state 125


state 115

    (12) statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    SYSTEM_PRINTLN  reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 12 (statement -> WHILE LPAREN expression RPAREN statement .)


state 116

    (34) expression -> expression MINUS expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 34 (expression -> expression MINUS expression .)
    DOT             reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 34 (expression -> expression MINUS expression .)
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    TIMES           shift and go to state 95

  ! LESS_THAN       [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 117

    (33) expression -> expression PLUS expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        reduce using rule 33 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 33 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 33 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 33 (expression -> expression PLUS expression .)
    DOT             reduce using rule 33 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 33 (expression -> expression PLUS expression .)
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    TIMES           shift and go to state 95

  ! LESS_THAN       [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 99 ]
  ! MINUS           [ shift and go to state 98 ]
  ! LBRACKET        [ shift and go to state 93 ]
  ! DOT             [ shift and go to state 96 ]


state 118

    (13) statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON .)


state 119

    (15) statement -> ID LBRACKET expression RBRACKET LET . expression SEMICOLON
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 126

state 120

    (11) statement -> IF LPAREN expression RPAREN statement . ELSE statement

    ELSE            shift and go to state 127


state 121

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression . SEMICOLON RBRACE
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    SEMICOLON       shift and go to state 128
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 122

    (48) expression -> NEW INT LBRACKET expression . RBRACKET
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    RBRACKET        shift and go to state 129
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 123

    (49) expression -> NEW ID LPAREN RPAREN .

    RBRACKET        reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    AND             reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    DOT             reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)
    COMMA           reduce using rule 49 (expression -> NEW ID LPAREN RPAREN .)


state 124

    (36) expression -> expression LBRACKET expression RBRACKET .

    RBRACKET        reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 36 (expression -> expression LBRACKET expression RBRACKET .)


state 125

    (38) expression -> expression DOT ID LPAREN . expressions_opt RPAREN
    (39) expressions_opt -> . expression expression_comma
    (40) expressions_opt -> . empty
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression
    (52) empty -> .

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81
    RPAREN          reduce using rule 52 (empty -> .)

    expressions_opt                shift and go to state 130
    empty                          shift and go to state 131
    expression                     shift and go to state 132

state 126

    (15) statement -> ID LBRACKET expression RBRACKET LET expression . SEMICOLON
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    SEMICOLON       shift and go to state 133
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96


state 127

    (11) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (10) statement -> . LBRACE statement_star RBRACE
    (11) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (12) statement -> . WHILE LPAREN expression RPAREN statement
    (13) statement -> . SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON
    (14) statement -> . ID LET expression SEMICOLON
    (15) statement -> . ID LBRACKET expression RBRACKET LET expression SEMICOLON

    LBRACE          shift and go to state 54
    IF              shift and go to state 58
    WHILE           shift and go to state 55
    SYSTEM_PRINTLN  shift and go to state 56
    ID              shift and go to state 57

    statement                      shift and go to state 134

state 128

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON . RBRACE

    RBRACE          shift and go to state 135


state 129

    (48) expression -> NEW INT LBRACKET expression RBRACKET .

    RBRACKET        reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    AND             reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    DOT             reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 48 (expression -> NEW INT LBRACKET expression RBRACKET .)


state 130

    (38) expression -> expression DOT ID LPAREN expressions_opt . RPAREN

    RPAREN          shift and go to state 136


state 131

    (40) expressions_opt -> empty .

    RPAREN          reduce using rule 40 (expressions_opt -> empty .)


state 132

    (39) expressions_opt -> expression . expression_comma
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN
    (41) expression_comma -> . expression_comma COMMA expression
    (42) expression_comma -> . empty
    (52) empty -> .

    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96
    COMMA           reduce using rule 52 (empty -> .)
    RPAREN          reduce using rule 52 (empty -> .)

    expression_comma               shift and go to state 138
    empty                          shift and go to state 137

state 133

    (15) statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .

    RBRACE          reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    LBRACE          reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    IF              reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    SYSTEM_PRINTLN  reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ID              reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON .)


state 134

    (11) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SYSTEM_PRINTLN  reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 11 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 135

    (26) methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .

    RBRACE          reduce using rule 26 (methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .)
    PUBLIC          reduce using rule 26 (methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE .)


state 136

    (38) expression -> expression DOT ID LPAREN expressions_opt RPAREN .

    RBRACKET        reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    LESS_THAN       reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    AND             reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    PLUS            reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    MINUS           reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    TIMES           reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    LBRACKET        reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    DOT             reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    RPAREN          reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    SEMICOLON       reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)
    COMMA           reduce using rule 38 (expression -> expression DOT ID LPAREN expressions_opt RPAREN .)


state 137

    (42) expression_comma -> empty .

    COMMA           reduce using rule 42 (expression_comma -> empty .)
    RPAREN          reduce using rule 42 (expression_comma -> empty .)


state 138

    (39) expressions_opt -> expression expression_comma .
    (41) expression_comma -> expression_comma . COMMA expression

    RPAREN          reduce using rule 39 (expressions_opt -> expression expression_comma .)
    COMMA           shift and go to state 139


state 139

    (41) expression_comma -> expression_comma COMMA . expression
    (31) expression -> . expression LESS_THAN expression
    (32) expression -> . expression AND expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression LBRACKET expression RBRACKET
    (37) expression -> . expression DOT LENGTH
    (38) expression -> . expression DOT ID LPAREN expressions_opt RPAREN
    (43) expression -> . LIT_INT
    (44) expression -> . TRUE
    (45) expression -> . FALSE
    (46) expression -> . ID
    (47) expression -> . THIS
    (48) expression -> . NEW INT LBRACKET expression RBRACKET
    (49) expression -> . NEW ID LPAREN RPAREN
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NOT expression

    LIT_INT         shift and go to state 76
    TRUE            shift and go to state 79
    FALSE           shift and go to state 74
    ID              shift and go to state 78
    THIS            shift and go to state 82
    NEW             shift and go to state 77
    LPAREN          shift and go to state 75
    NOT             shift and go to state 81

    expression                     shift and go to state 140

state 140

    (41) expression_comma -> expression_comma COMMA expression .
    (31) expression -> expression . LESS_THAN expression
    (32) expression -> expression . AND expression
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . LBRACKET expression RBRACKET
    (37) expression -> expression . DOT LENGTH
    (38) expression -> expression . DOT ID LPAREN expressions_opt RPAREN

    COMMA           reduce using rule 41 (expression_comma -> expression_comma COMMA expression .)
    RPAREN          reduce using rule 41 (expression_comma -> expression_comma COMMA expression .)
    LESS_THAN       shift and go to state 92
    AND             shift and go to state 94
    PLUS            shift and go to state 99
    MINUS           shift and go to state 98
    TIMES           shift and go to state 95
    LBRACKET        shift and go to state 93
    DOT             shift and go to state 96

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
