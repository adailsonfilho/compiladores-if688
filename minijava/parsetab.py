
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'EDAE4BCE108CFF14DFAEFBF710A8AC76'
    
_lr_action_items = {'TIMES':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,96,-41,-40,-42,-38,96,96,96,96,96,96,-46,96,-32,96,96,96,-34,96,96,-33,-44,96,96,96,-43,-35,96,]),'TRUE':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'MAIN':([20,],[28,]),'LESS_THAN':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,97,-41,-40,-42,-38,97,97,97,97,97,97,-46,-31,-32,97,-30,97,-34,97,97,-33,-44,97,97,97,-43,-35,97,]),'LENGTH':([101,],[117,]),'RETURN':([22,24,29,41,64,67,69,75,86,87,92,107,116,122,135,136,],[-48,-17,-16,-18,-48,-48,-10,-48,-9,-8,109,-14,-13,-12,-11,-15,]),'LBRACKET':([5,26,42,62,77,80,81,82,83,84,88,89,90,91,93,94,104,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,34,44,73,-39,99,-41,-40,-42,-38,99,99,99,99,99,99,121,-46,-31,-32,99,-30,99,-34,99,99,-33,-44,99,99,99,-43,-35,99,]),'CLASS':([0,3,7,38,76,],[1,8,8,-5,-2,]),'VOID':([17,],[20,]),'RBRACE':([18,22,23,24,29,30,31,33,37,41,57,59,65,67,68,69,86,87,107,116,122,132,135,136,137,],[-48,-48,-48,-17,-16,-48,38,-24,-23,-18,65,-48,76,-48,87,-10,-9,-8,-14,-13,-12,137,-11,-15,-25,]),'ELSE':([87,107,116,122,123,135,136,],[-8,-14,-13,-12,130,-11,-15,]),'LET':([5,62,108,],[-47,72,124,]),'NOT':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'COMMA':([5,49,63,77,81,82,83,84,94,110,111,112,113,114,117,119,126,128,133,134,141,142,],[-47,51,51,-39,-41,-40,-42,-38,-45,-46,-31,-32,-29,-30,-34,-28,-33,-44,140,-43,-35,140,]),'DOT':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,101,-41,-40,-42,-38,101,101,101,101,101,101,-46,-31,-32,101,-30,101,-34,101,101,-33,-44,101,101,101,-43,-35,101,]),'AND':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,102,-41,-40,-42,-38,102,102,102,102,102,102,-46,-31,-32,102,-30,102,-34,102,102,-33,-44,102,102,102,-43,-35,102,]),'LBRACE':([4,5,12,14,16,19,22,24,29,41,50,54,56,59,64,67,75,87,105,106,107,116,122,130,135,136,],[10,-47,-48,18,-7,-6,-48,-17,-16,-18,54,59,64,59,-48,59,59,-8,59,59,-14,-13,-12,59,-11,-15,]),'WHILE':([22,24,29,41,54,59,64,67,75,87,105,106,107,116,122,130,135,136,],[-48,-17,-16,-18,60,60,-48,60,60,-8,60,60,-14,-13,-12,60,-11,-15,]),'SYSTEM_PRINTLN':([22,24,29,41,54,59,64,67,75,87,105,106,107,116,122,130,135,136,],[-48,-17,-16,-18,58,58,-48,58,58,-8,58,58,-14,-13,-12,58,-11,-15,]),'LPAREN':([5,28,43,58,60,61,66,70,71,72,73,78,79,95,96,97,98,99,102,103,109,118,121,124,127,140,],[-47,36,45,66,70,71,78,78,78,78,78,78,78,78,78,78,78,78,78,120,78,127,78,78,78,78,]),'IF':([22,24,29,41,54,59,64,67,75,87,105,106,107,116,122,130,135,136,],[-48,-17,-16,-18,61,61,-48,61,61,-8,61,61,-14,-13,-12,61,-11,-15,]),'MINUS':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,95,-41,-40,-42,-38,95,95,95,95,95,95,-46,-31,-32,95,-30,95,-34,95,95,-33,-44,95,95,95,-43,-35,95,]),'STATIC':([13,],[17,]),'RBRACKET':([5,34,44,77,81,82,83,84,91,94,110,111,112,113,114,115,117,119,126,128,129,134,141,],[-47,40,46,-39,-41,-40,-42,-38,108,-45,-46,-31,-32,-29,-30,126,-34,-28,-33,-44,134,-43,-35,]),'EXTENDS':([5,12,],[-47,15,]),'LIT_INT':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'PLUS':([5,77,80,81,82,83,84,88,89,90,91,93,94,110,111,112,113,114,115,117,119,125,126,128,129,131,133,134,141,142,],[-47,-39,98,-41,-40,-42,-38,98,98,98,98,98,98,-46,-31,-32,98,-30,98,-34,98,98,-33,-44,98,98,98,-43,-35,98,]),'ID':([1,5,8,15,18,21,22,24,25,26,27,29,32,39,40,41,45,46,47,51,54,55,59,64,66,67,70,71,72,73,75,78,79,85,87,95,96,97,98,99,101,102,105,106,107,109,116,121,122,124,127,130,135,136,140,],[5,-47,5,5,5,-22,5,-17,-20,-21,5,-16,5,5,-19,-18,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-8,5,5,5,5,5,5,5,5,5,-14,5,-13,5,-12,5,5,5,-11,-15,5,]),'PUBLIC':([10,18,22,23,24,29,30,41,137,],[13,-48,-48,32,-17,-16,32,-18,-25,]),'RPAREN':([5,48,49,52,53,63,74,77,80,81,82,83,84,88,89,93,94,110,111,112,113,114,117,119,120,126,128,133,134,138,139,141,142,143,],[-47,50,-48,-27,56,-48,-26,-39,100,-41,-40,-42,-38,105,106,110,-45,-46,-31,-32,-29,-30,-34,-28,128,-33,-44,-48,-43,-37,141,-35,-48,-36,]),'FALSE':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'SEMICOLON':([5,35,77,81,82,83,84,90,94,100,110,111,112,113,114,117,119,125,126,128,131,134,141,],[-47,41,-39,-41,-40,-42,-38,107,-45,116,-46,-31,-32,-29,-30,-34,-28,132,-33,-44,136,-43,-35,]),'INT':([18,22,32,41,45,51,64,85,],[26,26,26,-18,26,26,26,104,]),'THIS':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'STRING':([36,],[42,]),'$end':([2,3,6,7,9,11,38,76,],[0,-48,-4,-48,-1,-3,-5,-2,]),'BOOLEAN':([18,22,32,41,45,51,64,],[25,25,25,-18,25,25,25,]),'NEW':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([54,59,67,75,105,106,130,],[57,67,67,67,122,123,135,]),'expression':([66,70,71,72,73,78,79,95,96,97,98,99,102,109,121,124,127,140,],[80,88,89,90,91,93,94,111,112,113,114,115,119,125,129,131,133,142,]),'expression_opt':([133,142,],[139,143,]),'methoddeclaration':([23,30,],[30,30,]),'methoddeclaration_star':([23,30,],[31,37,]),'classdeclaration':([3,7,],[7,7,]),'empty':([3,7,12,18,22,23,30,49,59,63,64,67,75,133,142,],[6,6,16,24,24,33,33,52,69,52,24,69,69,138,138,]),'vardeclaration':([18,22,64,],[22,22,22,]),'vardeclaration_star':([18,22,64,],[23,29,75,]),'goal':([0,],[2,]),'extends_opt':([12,],[14,]),'mainclass':([0,],[3,]),'statement_star':([59,67,75,],[68,86,92,]),'type':([18,22,32,45,51,64,],[27,27,39,47,55,27,]),'id':([1,8,15,18,22,27,32,39,45,46,47,51,54,55,59,64,66,67,70,71,72,73,75,78,79,85,95,96,97,98,99,101,102,105,106,109,121,124,127,130,140,],[4,12,19,21,21,35,21,43,21,48,49,21,62,63,62,21,81,62,81,81,81,81,62,81,81,103,81,81,81,81,81,118,81,62,62,81,81,81,81,62,81,]),'classdeclaration_star':([3,7,],[9,11,]),'params_opt':([49,63,],[53,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('goal -> mainclass classdeclaration_star','goal',2,'p_goal','minijava_parser.py',141),
  ('mainclass -> CLASS id LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET id RPAREN LBRACE statement RBRACE RBRACE','mainclass',17,'p_mainclass','minijava_parser.py',146),
  ('classdeclaration_star -> classdeclaration classdeclaration_star','classdeclaration_star',2,'p_classdeclaration_star','minijava_parser.py',150),
  ('classdeclaration_star -> empty','classdeclaration_star',1,'p_classdeclaration_star','minijava_parser.py',151),
  ('classdeclaration -> CLASS id extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE','classdeclaration',7,'p_classdeclaration','minijava_parser.py',157),
  ('extends_opt -> EXTENDS id','extends_opt',2,'p_extends_opt','minijava_parser.py',162),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','minijava_parser.py',163),
  ('statement -> LBRACE statement_star RBRACE','statement',3,'p_statement_block','minijava_parser.py',169),
  ('statement_star -> statement statement_star','statement_star',2,'p_statement_star','minijava_parser.py',175),
  ('statement_star -> empty','statement_star',1,'p_statement_star','minijava_parser.py',176),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','minijava_parser.py',182),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','minijava_parser.py',188),
  ('statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_syso','minijava_parser.py',194),
  ('statement -> id LET expression SEMICOLON','statement',4,'p_statement_id_exp','minijava_parser.py',200),
  ('statement -> id LBRACKET expression RBRACKET LET expression SEMICOLON','statement',7,'p_statement_id_array_exp','minijava_parser.py',206),
  ('vardeclaration_star -> vardeclaration vardeclaration_star','vardeclaration_star',2,'p_vardeclaration_star','minijava_parser.py',211),
  ('vardeclaration_star -> empty','vardeclaration_star',1,'p_vardeclaration_star','minijava_parser.py',212),
  ('vardeclaration -> type id SEMICOLON','vardeclaration',3,'p_vardeclaration','minijava_parser.py',218),
  ('type -> INT LBRACKET RBRACKET','type',3,'p_type_int_array','minijava_parser.py',224),
  ('type -> BOOLEAN','type',1,'p_type_boolean','minijava_parser.py',230),
  ('type -> INT','type',1,'p_type_int','minijava_parser.py',236),
  ('type -> id','type',1,'p_type_id','minijava_parser.py',242),
  ('methoddeclaration_star -> methoddeclaration methoddeclaration_star','methoddeclaration_star',2,'p_methoddeclaration_star','minijava_parser.py',247),
  ('methoddeclaration_star -> empty','methoddeclaration_star',1,'p_methoddeclaration_star','minijava_parser.py',248),
  ('methoddeclaration -> PUBLIC type id LPAREN type id params_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE','methoddeclaration',15,'p_methoddeclaration','minijava_parser.py',254),
  ('params_opt -> COMMA type id params_opt','params_opt',4,'p_params_opt','minijava_parser.py',260),
  ('params_opt -> empty','params_opt',1,'p_params_opt','minijava_parser.py',261),
  ('expression -> expression AND expression','expression',3,'p_expression_bin','minijava_parser.py',267),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_bin','minijava_parser.py',268),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','minijava_parser.py',269),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','minijava_parser.py',270),
  ('expression -> expression TIMES expression','expression',3,'p_expression_bin','minijava_parser.py',271),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_array','minijava_parser.py',277),
  ('expression -> expression DOT LENGTH','expression',3,'p_expression_length','minijava_parser.py',283),
  ('expression -> expression DOT id LPAREN expression expression_opt RPAREN','expression',7,'p_expression_params','minijava_parser.py',289),
  ('expression_opt -> COMMA expression expression_opt','expression_opt',3,'p_expression_opt','minijava_parser.py',294),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','minijava_parser.py',295),
  ('expression -> LIT_INT','expression',1,'p_expression_lit_int','minijava_parser.py',301),
  ('expression -> TRUE','expression',1,'p_expression_true','minijava_parser.py',307),
  ('expression -> FALSE','expression',1,'p_expression_false','minijava_parser.py',313),
  ('expression -> id','expression',1,'p_expression_id','minijava_parser.py',319),
  ('expression -> THIS','expression',1,'p_expression_this','minijava_parser.py',325),
  ('expression -> NEW INT LBRACKET expression RBRACKET','expression',5,'p_expression_new_array','minijava_parser.py',331),
  ('expression -> NEW id LPAREN RPAREN','expression',4,'p_expression_new_instance','minijava_parser.py',337),
  ('expression -> NOT expression','expression',2,'p_expression_not','minijava_parser.py',343),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','minijava_parser.py',349),
  ('id -> ID','id',1,'p_id','minijava_parser.py',354),
  ('empty -> <empty>','empty',0,'p_empty','minijava_parser.py',363),
]
