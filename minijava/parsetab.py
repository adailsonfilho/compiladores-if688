
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'DF4DE5D32AC594408EE413DDAD7353F9'
    
_lr_action_items = {'RBRACE':([18,20,21,24,26,29,35,39,54,59,62,63,69,72,73,103,115,118,128,133,134,135,],[-52,-17,-52,-16,-25,34,-24,-18,-52,69,-9,72,87,-10,-8,-14,-12,-13,135,-15,-11,-26,]),'LBRACE':([4,11,14,15,17,20,24,39,45,50,51,54,60,62,63,70,72,73,88,97,103,104,115,118,127,133,134,],[7,-52,18,-7,-6,-17,-16,-18,50,54,60,-52,-52,-9,54,-52,-10,-8,54,54,-14,54,-12,-13,54,-15,-11,]),'PLUS':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,99,-47,99,99,99,99,99,-51,-50,-31,99,-32,-35,-37,-34,-33,99,99,-49,-36,99,-48,99,-38,99,]),'LBRACKET':([27,31,57,74,76,78,79,80,82,83,84,85,86,89,90,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[32,37,66,-45,-43,-46,-44,93,-47,93,93,93,93,93,107,-51,-50,-31,93,-32,-35,-37,-34,-33,93,93,-49,-36,93,-48,93,-38,93,]),'LENGTH':([96,],[113,]),'ELSE':([72,103,115,118,120,133,134,],[-10,-14,-12,-13,127,-15,-11,]),'STATIC':([10,],[12,]),'INT':([18,20,21,24,36,39,44,53,60,70,77,],[-52,-17,27,-16,27,-18,27,27,-52,27,90,]),'BOOLEAN':([18,20,21,24,36,39,44,53,60,70,],[-52,-17,25,-16,25,-18,25,25,-52,25,]),'FALSE':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'RETURN':([20,24,39,60,62,70,72,73,88,103,115,118,133,134,],[-17,-16,-18,-52,-9,-52,-10,-8,105,-14,-12,-13,-15,-11,]),'DOT':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,96,-47,96,96,96,96,96,-51,-50,-31,96,-32,-35,-37,-34,-33,96,96,-49,-36,96,-48,96,-38,96,]),'PUBLIC':([7,18,20,21,24,26,29,35,39,135,],[10,-52,-17,-52,-16,-25,36,-24,-18,-26,]),'MAIN':([16,],[19,]),'WHILE':([20,24,39,50,54,60,62,63,70,72,73,88,97,103,104,115,118,127,133,134,],[-17,-16,-18,55,-52,-52,-9,55,-52,-10,-8,55,55,-14,55,-12,-13,55,-15,-11,]),'SYSTEM_PRINTLN':([20,24,39,50,54,60,62,63,70,72,73,88,97,103,104,115,118,127,133,134,],[-17,-16,-18,56,-52,-52,-9,56,-52,-10,-8,56,56,-14,56,-12,-13,56,-15,-11,]),'STRING':([22,],[31,]),'COMMA':([44,48,49,71,74,76,78,79,82,100,106,109,111,112,113,116,117,123,124,129,132,136,137,138,140,],[-52,53,-30,-29,-45,-43,-46,-44,-47,-51,-50,-31,-32,-35,-37,-34,-33,-49,-36,-48,-52,-38,-42,139,-41,]),'LPAREN':([19,42,55,56,58,64,65,66,67,68,75,81,91,92,93,94,95,98,99,105,107,114,119,125,139,],[22,44,64,65,68,75,75,75,75,75,75,75,108,75,75,75,75,75,75,75,75,125,75,75,75,]),'ID':([1,8,13,18,20,21,23,24,25,27,28,30,36,38,39,40,41,44,47,50,53,54,60,61,62,63,64,65,66,67,68,70,72,73,75,77,81,88,92,93,94,95,96,97,98,99,103,104,105,107,115,118,119,125,127,133,134,139,],[4,11,17,-52,-17,30,-19,-16,-21,-22,33,-23,30,-20,-18,42,43,30,52,57,30,-52,-52,71,-9,57,78,78,78,78,78,30,-10,-8,78,91,78,57,78,78,78,78,114,57,78,78,-14,57,78,78,-12,-13,78,78,57,-15,-11,78,]),'EXTENDS':([11,],[13,]),'AND':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,94,-47,94,94,94,94,94,-51,-50,-31,94,-32,-35,-37,94,94,94,94,-49,-36,94,-48,94,-38,94,]),'$end':([2,3,5,6,9,34,87,],[-52,0,-1,-4,-3,-5,-2,]),'THIS':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'CLASS':([0,2,5,6,9,34,87,],[1,-52,8,-4,-3,-5,-2,]),'TRUE':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'IF':([20,24,39,50,54,60,62,63,70,72,73,88,97,103,104,115,118,127,133,134,],[-17,-16,-18,58,-52,-52,-9,58,-52,-10,-8,58,58,-14,58,-12,-13,58,-15,-11,]),'RBRACKET':([32,37,74,76,78,79,82,84,100,106,109,110,111,112,113,116,117,122,123,124,129,136,],[38,41,-45,-43,-46,-44,-47,102,-51,-50,-31,124,-32,-35,-37,-34,-33,129,-49,-36,-48,-38,]),'LIT_INT':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'NOT':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'LET':([57,102,],[67,119,]),'TIMES':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,95,-47,95,95,95,95,95,95,-50,95,95,95,-35,-37,95,95,95,95,-49,-36,95,-48,95,-38,95,]),'MINUS':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,98,-47,98,98,98,98,98,-51,-50,-31,98,-32,-35,-37,-34,-33,98,98,-49,-36,98,-48,98,-38,98,]),'VOID':([12,],[16,]),'NEW':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'SEMICOLON':([33,74,76,78,79,82,85,100,101,106,109,111,112,113,116,117,121,123,124,126,129,136,],[39,-45,-43,-46,-44,-47,103,-51,118,-50,-31,-32,-35,-37,-34,-33,128,-49,-36,133,-48,-38,]),'LESS_THAN':([74,76,78,79,80,82,83,84,85,86,89,100,106,109,110,111,112,113,116,117,121,122,123,124,126,129,132,136,140,],[-45,-43,-46,-44,92,-47,92,92,92,92,92,-51,-50,-31,92,-32,-35,-37,92,92,92,92,-49,-36,92,-48,92,-38,92,]),'RPAREN':([43,44,46,48,49,52,71,74,76,78,79,80,82,83,86,89,100,106,108,109,111,112,113,116,117,123,124,125,129,130,131,132,136,137,138,140,],[45,-52,51,-28,-30,-27,-29,-45,-43,-46,-44,97,-47,101,104,106,-51,-50,123,-31,-32,-35,-37,-34,-33,-49,-36,-52,-48,136,-40,-52,-38,-42,-39,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions_opt':([125,],[130,]),'empty':([2,11,18,21,44,54,60,70,125,132,],[6,15,20,26,49,62,20,62,131,137,]),'classdeclaration_star':([2,],[5,]),'type_array':([21,36,44,53,70,],[23,23,23,23,23,]),'expression_comma':([132,],[138,]),'vardeclaration':([21,70,],[24,24,]),'classdeclaration':([5,],[9,]),'mainclass':([0,],[2,]),'args_opt':([44,],[46,]),'vardeclaration_star':([18,60,],[21,70,]),'statement_star':([54,70,],[63,88,]),'goal':([0,],[3,]),'type':([21,36,44,53,70,],[28,40,47,61,28,]),'comma_args':([44,],[48,]),'methoddeclaration':([29,],[35,]),'statement':([50,63,88,97,104,127,],[59,73,73,115,120,134,]),'extends_opt':([11,],[14,]),'methoddeclaration_star':([21,],[29,]),'expression':([64,65,66,67,68,75,81,92,93,94,95,98,99,105,107,119,125,139,],[80,83,84,85,86,89,100,109,110,111,112,116,117,121,122,126,132,140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('goal -> mainclass classdeclaration_star','goal',2,'p_goal','parser.py',33),
  ('mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE','mainclass',17,'p_mainclass','parser.py',38),
  ('classdeclaration_star -> classdeclaration_star classdeclaration','classdeclaration_star',2,'p_classdeclaration_star','parser.py',43),
  ('classdeclaration_star -> empty','classdeclaration_star',1,'p_classdeclaration_star','parser.py',44),
  ('classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE','classdeclaration',7,'p_classdeclaration','parser.py',50),
  ('extends_opt -> EXTENDS ID','extends_opt',2,'p_extends_opt','parser.py',60),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','parser.py',61),
  ('statement_star -> statement_star statement','statement_star',2,'p_statement_star','parser.py',67),
  ('statement_star -> empty','statement_star',1,'p_statement_star','parser.py',68),
  ('statement -> LBRACE statement_star RBRACE','statement',3,'p_statement_block','parser.py',74),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','parser.py',80),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','parser.py',86),
  ('statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_syso','parser.py',94),
  ('statement -> ID LET expression SEMICOLON','statement',4,'p_statement_id_exp','parser.py',100),
  ('statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON','statement',7,'p_statement_id_array_exp','parser.py',107),
  ('vardeclaration_star -> vardeclaration_star vardeclaration','vardeclaration_star',2,'p_vardeclaration_star','parser.py',112),
  ('vardeclaration_star -> empty','vardeclaration_star',1,'p_vardeclaration_star','parser.py',113),
  ('vardeclaration -> type ID SEMICOLON','vardeclaration',3,'p_vardeclaration','parser.py',119),
  ('type -> type_array','type',1,'p_type_int_array','parser.py',127),
  ('type_array -> INT LBRACKET RBRACKET','type_array',3,'p_type_int_array_','parser.py',132),
  ('type -> BOOLEAN','type',1,'p_type_boolean','parser.py',138),
  ('type -> INT','type',1,'p_type_int','parser.py',144),
  ('type -> ID','type',1,'p_type_id','parser.py',150),
  ('methoddeclaration_star -> methoddeclaration_star methoddeclaration','methoddeclaration_star',2,'p_methoddeclaration_star','parser.py',155),
  ('methoddeclaration_star -> empty','methoddeclaration_star',1,'p_methoddeclaration_star','parser.py',156),
  ('methoddeclaration -> PUBLIC type ID LPAREN args_opt RPAREN LBRACE vardeclaration_star statement_star RETURN expression SEMICOLON RBRACE','methoddeclaration',13,'p_methoddeclaration','parser.py',162),
  ('args_opt -> type ID','args_opt',2,'p_args_opt','parser.py',167),
  ('args_opt -> comma_args','args_opt',1,'p_args_opt','parser.py',168),
  ('comma_args -> comma_args COMMA type ID','comma_args',4,'p_comma_args','parser.py',174),
  ('comma_args -> empty','comma_args',1,'p_comma_args','parser.py',175),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_bin','parser.py',181),
  ('expression -> expression AND expression','expression',3,'p_expression_bin','parser.py',182),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','parser.py',183),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','parser.py',184),
  ('expression -> expression TIMES expression','expression',3,'p_expression_bin','parser.py',185),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_array','parser.py',207),
  ('expression -> expression DOT LENGTH','expression',3,'p_expression_length','parser.py',214),
  ('expression -> expression DOT ID LPAREN expressions_opt RPAREN','expression',6,'p_expression_params','parser.py',220),
  ('expressions_opt -> expression expression_comma','expressions_opt',2,'p_expression_opt','parser.py',226),
  ('expressions_opt -> empty','expressions_opt',1,'p_expression_opt','parser.py',227),
  ('expression_comma -> expression_comma COMMA expression','expression_comma',3,'p_expression_comme','parser.py',232),
  ('expression_comma -> empty','expression_comma',1,'p_expression_comme','parser.py',233),
  ('expression -> LIT_INT','expression',1,'p_expression_litint','parser.py',238),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',245),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',252),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',259),
  ('expression -> THIS','expression',1,'p_expression_this','parser.py',266),
  ('expression -> NEW INT LBRACKET expression RBRACKET','expression',5,'p_expression_new_array','parser.py',272),
  ('expression -> NEW ID LPAREN RPAREN','expression',4,'p_expression_new_instance','parser.py',279),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',285),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',292),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',309),
]
