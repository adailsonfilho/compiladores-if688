
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '5D916A4A122827907D0253600E000EAE'
    
_lr_action_items = {'$end':([1,3,5,6,9,33,82,],[0,-48,-4,-1,-3,-5,-2,]),'SYSTEM_PRINTLN':([21,25,38,46,51,60,61,78,79,84,97,98,100,102,107,117,119,125,130,131,],[-16,-17,-18,48,-48,-9,48,-10,-8,-48,48,48,-14,-48,-13,-12,48,48,-11,-15,]),'DOT':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,90,-39,90,90,90,90,90,90,-47,90,-35,-33,90,-32,90,-31,90,-45,-34,90,90,-44,90,90,-36,]),'RETURN':([21,25,38,60,78,79,84,100,102,103,107,117,119,130,131,],[-16,-17,-18,-9,-10,-8,-48,-14,-48,120,-13,-12,-26,-11,-15,]),'IF':([21,25,38,46,51,60,61,78,79,84,97,98,100,102,107,117,119,125,130,131,],[-16,-17,-18,49,-48,-9,49,-10,-8,-48,49,49,-14,-48,-13,-12,49,49,-11,-15,]),'STATIC':([10,],[12,]),'RBRACE':([17,20,21,25,28,29,35,38,51,53,60,61,64,78,79,100,107,117,130,131,132,136,],[-48,-48,-16,-17,33,-24,-23,-18,-48,64,-9,78,82,-10,-8,-14,-13,-12,-11,-15,136,-25,]),'TRUE':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'LBRACKET':([23,30,52,68,69,71,72,73,74,76,77,80,81,85,86,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[31,36,62,-40,-41,-42,-43,92,-39,92,92,92,92,92,105,92,-47,92,-35,-33,92,-32,92,-31,92,-45,-34,92,92,-44,92,92,-36,]),'MAIN':([16,],[19,]),'INT':([17,20,21,25,34,38,43,54,70,84,102,],[-48,23,-16,-17,23,-18,23,23,86,-48,23,]),'LBRACE':([4,11,13,15,18,21,25,38,44,46,51,60,61,66,78,79,84,97,98,100,102,107,117,119,125,130,131,],[7,-48,17,-7,-6,-16,-17,-18,46,51,-48,-9,51,84,-10,-8,-48,51,51,-14,-48,-13,-12,51,51,-11,-15,]),'VOID':([12,],[16,]),'NEW':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'LENGTH':([90,],[109,]),'SEMICOLON':([32,68,69,71,72,74,81,88,96,104,108,109,111,113,114,115,122,124,126,127,128,138,],[38,-40,-41,-42,-43,-39,100,107,-46,-47,-30,-35,-33,-32,-29,-31,-45,-34,131,132,-44,-36,]),'LET':([52,99,],[63,118,]),'RBRACKET':([31,36,68,69,71,72,74,80,96,104,108,109,111,112,113,114,115,121,122,124,128,138,],[37,40,-40,-41,-42,-43,-39,99,-46,-47,-30,-35,-33,124,-32,-29,-31,128,-45,-34,-44,-36,]),'WHILE':([21,25,38,46,51,60,61,78,79,84,97,98,100,102,107,117,119,125,130,131,],[-16,-17,-18,50,-48,-9,50,-10,-8,-48,50,50,-14,-48,-13,-12,50,50,-11,-15,]),'FALSE':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'THIS':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LESS_THAN':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,89,-39,89,89,89,89,89,89,-47,89,-35,-33,89,-32,89,-31,89,-45,-34,89,89,-44,89,89,-36,]),'LPAREN':([19,41,48,49,50,57,58,59,62,63,67,75,87,89,91,92,93,94,95,105,110,118,120,123,133,],[22,43,57,58,59,67,67,67,67,67,67,67,106,67,67,67,67,67,67,67,123,67,67,67,67,]),'EXTENDS':([11,],[14,]),'ID':([2,8,14,17,20,21,23,24,25,26,27,34,37,38,39,40,43,45,46,51,54,57,58,59,60,61,62,63,65,67,70,75,78,79,84,89,90,91,92,93,94,95,97,98,100,102,105,107,117,118,119,120,123,125,130,131,133,],[4,11,18,-48,24,-16,-21,-22,-17,-20,32,24,-19,-18,41,42,24,47,52,-48,24,71,71,71,-9,52,71,71,83,71,87,71,-10,-8,-48,71,110,71,71,71,71,71,52,52,-14,24,71,-13,-12,71,52,71,71,52,-11,-15,71,]),'TIMES':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,91,-39,91,91,91,91,91,91,-47,91,-35,-33,91,91,91,91,91,-45,-34,91,91,-44,91,91,-36,]),'ELSE':([78,100,107,116,117,130,131,],[-10,-14,-13,125,-12,-11,-15,]),'CLASS':([0,3,5,6,9,33,82,],[2,-48,-4,8,-3,-5,-2,]),'PUBLIC':([7,17,20,21,25,28,29,35,38,136,],[10,-48,-48,-16,-17,34,-24,-23,-18,-25,]),'COMMA':([47,68,69,71,72,74,83,96,104,108,109,111,113,114,115,122,124,128,129,137,138,],[54,-40,-41,-42,-43,-39,54,-46,-47,-30,-35,-33,-32,-29,-31,-45,-34,-44,133,133,-36,]),'BOOLEAN':([17,20,21,25,34,38,43,54,84,102,],[-48,26,-16,-17,26,-18,26,26,-48,26,]),'MINUS':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,93,-39,93,93,93,93,93,93,-47,93,-35,-33,93,-32,93,-31,93,-45,-34,93,93,-44,93,93,-36,]),'AND':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,94,-39,94,94,94,94,94,94,-47,94,-35,-33,94,-32,94,-31,94,-45,-34,94,94,-44,94,94,-36,]),'LIT_INT':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'RPAREN':([42,47,55,56,68,69,71,72,73,74,76,77,83,85,96,101,104,106,108,109,111,113,114,115,122,124,128,129,134,135,137,138,139,],[44,-48,66,-28,-40,-41,-42,-43,88,-39,97,98,-48,104,-46,-27,-47,122,-30,-35,-33,-32,-29,-31,-45,-34,-44,-48,138,-38,-48,-36,-37,]),'STRING':([22,],[30,]),'NOT':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'PLUS':([68,69,71,72,73,74,76,77,80,81,85,96,104,108,109,111,112,113,114,115,121,122,124,126,127,128,129,137,138,],[-40,-41,-42,-43,95,-39,95,95,95,95,95,95,-47,95,-35,-33,95,-32,95,-31,95,-45,-34,95,95,-44,95,95,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'extends_opt':([11,],[13,]),'params_opt':([47,83,],[55,101,]),'vardeclaration_star':([17,84,],[20,102,]),'expression_opt':([129,137,],[134,139,]),'methodbody':([84,],[103,]),'goal':([0,],[1,]),'classdeclaration_star':([3,],[6,]),'classdeclaration':([6,],[9,]),'vardeclaration':([20,102,],[25,25,]),'expression':([57,58,59,62,63,67,75,89,91,92,93,94,95,105,118,120,123,133,],[73,76,77,80,81,85,96,108,111,112,113,114,115,121,126,127,129,137,]),'statement_star':([51,102,],[61,119,]),'methoddeclaration':([28,],[35,]),'statement':([46,61,97,98,119,125,],[53,79,116,117,79,130,]),'type':([20,34,43,54,102,],[27,39,45,65,27,]),'methoddeclaration_star':([20,],[28,]),'mainclass':([0,],[3,]),'empty':([3,11,17,20,47,51,83,84,102,129,137,],[5,15,21,29,56,60,56,21,60,135,135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('goal -> mainclass classdeclaration_star','goal',2,'p_goal','minijava_parser.py',140),
  ('mainclass -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LBRACE statement RBRACE RBRACE','mainclass',17,'p_mainclass','minijava_parser.py',145),
  ('classdeclaration_star -> classdeclaration_star classdeclaration','classdeclaration_star',2,'p_classdeclaration_star','minijava_parser.py',150),
  ('classdeclaration_star -> empty','classdeclaration_star',1,'p_classdeclaration_star','minijava_parser.py',151),
  ('classdeclaration -> CLASS ID extends_opt LBRACE vardeclaration_star methoddeclaration_star RBRACE','classdeclaration',7,'p_classdeclaration','minijava_parser.py',157),
  ('extends_opt -> EXTENDS ID','extends_opt',2,'p_extends_opt','minijava_parser.py',162),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','minijava_parser.py',163),
  ('statement_star -> statement_star statement','statement_star',2,'p_statement_star','minijava_parser.py',169),
  ('statement_star -> empty','statement_star',1,'p_statement_star','minijava_parser.py',170),
  ('statement -> LBRACE statement_star RBRACE','statement',3,'p_statement_block','minijava_parser.py',176),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement_if','minijava_parser.py',182),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement_while','minijava_parser.py',188),
  ('statement -> SYSTEM_PRINTLN LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_syso','minijava_parser.py',194),
  ('statement -> ID LET expression SEMICOLON','statement',4,'p_statement_id_exp','minijava_parser.py',200),
  ('statement -> ID LBRACKET expression RBRACKET LET expression SEMICOLON','statement',7,'p_statement_id_array_exp','minijava_parser.py',206),
  ('vardeclaration_star -> empty','vardeclaration_star',1,'p_vardeclaration_star','minijava_parser.py',211),
  ('vardeclaration_star -> vardeclaration_star vardeclaration','vardeclaration_star',2,'p_vardeclaration_star','minijava_parser.py',212),
  ('vardeclaration -> type ID SEMICOLON','vardeclaration',3,'p_vardeclaration','minijava_parser.py',218),
  ('type -> INT LBRACKET RBRACKET','type',3,'p_type_int_array','minijava_parser.py',224),
  ('type -> BOOLEAN','type',1,'p_type_boolean','minijava_parser.py',230),
  ('type -> INT','type',1,'p_type_int','minijava_parser.py',236),
  ('type -> ID','type',1,'p_type_id','minijava_parser.py',242),
  ('methoddeclaration_star -> methoddeclaration_star methoddeclaration','methoddeclaration_star',2,'p_methoddeclaration_star','minijava_parser.py',247),
  ('methoddeclaration_star -> empty','methoddeclaration_star',1,'p_methoddeclaration_star','minijava_parser.py',248),
  ('methoddeclaration -> PUBLIC type ID LPAREN type ID params_opt RPAREN LBRACE methodbody RETURN expression SEMICOLON RBRACE','methoddeclaration',14,'p_methoddeclaration','minijava_parser.py',254),
  ('methodbody -> vardeclaration_star statement_star','methodbody',2,'p_method_body','minijava_parser.py',258),
  ('params_opt -> COMMA type ID params_opt','params_opt',4,'p_params_opt','minijava_parser.py',262),
  ('params_opt -> empty','params_opt',1,'p_params_opt','minijava_parser.py',263),
  ('expression -> expression AND expression','expression',3,'p_expression_bin','minijava_parser.py',269),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_bin','minijava_parser.py',270),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','minijava_parser.py',271),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','minijava_parser.py',272),
  ('expression -> expression TIMES expression','expression',3,'p_expression_bin','minijava_parser.py',273),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_array','minijava_parser.py',279),
  ('expression -> expression DOT LENGTH','expression',3,'p_expression_length','minijava_parser.py',285),
  ('expression -> expression DOT ID LPAREN expression expression_opt RPAREN','expression',7,'p_expression_params','minijava_parser.py',291),
  ('expression_opt -> COMMA expression expression_opt','expression_opt',3,'p_expression_opt','minijava_parser.py',296),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','minijava_parser.py',297),
  ('expression -> LIT_INT','expression',1,'p_expression_litint','minijava_parser.py',303),
  ('expression -> TRUE','expression',1,'p_expression_true','minijava_parser.py',309),
  ('expression -> FALSE','expression',1,'p_expression_false','minijava_parser.py',315),
  ('expression -> ID','expression',1,'p_expression_id','minijava_parser.py',321),
  ('expression -> THIS','expression',1,'p_expression_this','minijava_parser.py',327),
  ('expression -> NEW INT LBRACKET expression RBRACKET','expression',5,'p_expression_new_array','minijava_parser.py',333),
  ('expression -> NEW ID LPAREN RPAREN','expression',4,'p_expression_new_instance','minijava_parser.py',339),
  ('expression -> NOT expression','expression',2,'p_expression_not','minijava_parser.py',345),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','minijava_parser.py',351),
  ('empty -> <empty>','empty',0,'p_empty','minijava_parser.py',365),
]
